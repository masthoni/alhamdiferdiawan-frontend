{"version":3,"sources":["pages/Dashboard.js","components/loading-spinner/LoadingSpinner.js","store/actions.js","store/reducers/auth.js","store/reducers/user.js","store/reducers/product.js","store/reducers/product-category.js","store/reducers/submission-category.js","store/reducers/wallet.js","store/reducers/company-profile.js","store/reducers/items.js","store/reducers/submissions.js","store/reducers/transactions.js","store/index.js","utils/axios.js","services/company-profile.js","components/Modal.js","pages/company-profile/CompanyProfile.js","services/user.js","pages/manage-user/ManageUser.js","services/product.js","services/product-category.js","services/items.js","pages/product/Product.js","services/submission-category.js","pages/submission-categories/SubmissionCategory.js","pages/product-category/ProductCategory.js","services/submission.js","pages/submission/pemasukan/index.js","services/transactions.js","services/wallet.js","pages/submission/pemasukan/invoice.js","pages/submission/pemasukan/create.js","pages/submission/pemasukan/edit.js","pages/submission/pengeluaran/index.js","pages/submission/pengeluaran/create.js","pages/submission/pengeluaran/purchase-order.js","pages/submission/pengeluaran/edit.js","pages/wallets/Wallet.js","pages/items/index.js","pages/transactions/index.js","pages/laporan/index.js","services/auth.js","modules/main/header/user-dropdown/UserDropdown.js","modules/main/header/Header.js","modules/main/footer/Footer.js","config/ability.js","components/Can.js","modules/main/menu-sidebar/MenuSidebar.js","modules/main/Main.js","components/button/Button.js","modules/login/Login.js","routes/PublicRoute.js","routes/PrivateRoute.js","App.js","i18n.js","serviceWorker.js","index.js","utils/number.js"],"names":["Dashboard","className","role","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","LoadingSpinner","isLoading","classes","Backdrop","open","CircularProgress","LOGIN_USER","LOGOUT_USER","LOAD_USER","LOAD_USERS","STORE_USER","DELETE_USER","UPDATE_USER","LOAD_PRODUCTS","STORE_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","LOAD_SUBMISSION_CATEGORY","STORE_SUBMISSION_CATEGORY","DELETE_SUBMISSION_CATEGORY","UPDATE_SUBMISSION_CATEGORY","LOAD_PRODUCT_CATEGORY","STORE_PRODUCT_CATEGORY","DELETE_PRODUCT_CATEGORY","UPDATE_PRODUCT_CATEGORY","LOAD_WALLET","STORE_WALLET","DELETE_WALLET","UPDATE_WALLET","GET_COMPANY","STORE_COMPANY","UPDATE_COMPANY","GET_ITEMS","LOAD_ITEMS","LOAD_SUBMISSIONS","STORE_SUBMISSIONS","SHOW_SUBMISSIONS","UPDATE_STATUS","DELETE_SUBMISSION","UPDATE_FULLFILMENT","LOAD_TRANSACTIONS","initialState","isLoggedIn","localStorage","getItem","token","currentUser","reducer","state","action","type","ActionTypes","setItem","JSON","stringify","user","removeItem","users","detailUser","newUser","splice","updateUser","index","deleteUser","products","detailProduct","newProduct","updateProduct","deleteProduct","productCategory","detailProductCategory","newProductCategory","updateProductCategory","deleteProductCategory","submissionCategory","detailSubmissionCategory","newSubmissionCategory","updateSubmissionCategory","deleteSubmissionCategory","wallet","detailWallet","newWallet","updateWallet","deleteWallet","company","newCompany","items","submissions","detailSubmission","updateSubmission","transactions","rootReducer","combineReducers","auth","authReducer","userReducer","product","productReducer","productCategoryReducer","submissionCategoryReducer","walletReducer","CompanyReducer","ItemsReducer","SubmissionsReducer","TransactionsReducer","store","createStore","intance","axios","create","baseURL","process","interceptors","request","use","NProgress","start","getState","headers","Authorization","body","FormData","error","Promise","reject","response","done","status","dispatch","message","data","forEach","element","toast","style","fontWeight","ReactHtmlParser","getCompany","a","opts","instance","get","storeCompany","payload","post","updateCompany","id","put","Modal","this","props","show","size","title","customTitle","onSubmit","customButton","customSubmit","submitTitle","closeTitle","onHide","onClose","onBackDrop","centered","dialogClassName","aria-labelledby","Header","closeButton","border","paddingLeft","Title","Body","Footer","padding","Button","onClick","React","Component","defaultProps","connect","useTranslation","t","useState","loading","setLoading","setData","setShow","showImage","setShowImage","ownerName","companyName","companyAddress","companyNumber","companyEmail","companyTelp","description","companyLogo","setPayload","tabIndex","setTabIndex","useEffect","ProfileService","then","handleClose","handleShow","createdAt","updatedAt","newData","handleCloseImage","fontSize","keyboard","setTimeout","success","catch","htmlFor","defaultValue","placeholder","onChange","e","target","value","newPayload","append","files","to","background","borderColor","handleShowImage","src","alt","getUser","storeUser","delete","indexUser","username","fullName","email","password","imageUser","search","setSearch","page","setPage","setSize","totalRow","setTotalRow","dataUser","setDataUser","dataImage","setDataImage","columns","setColumn","getData","name","cell","row","width","selector","height","aria-label","handleDelete","pageChange","sizeChange","params","q","UserService","rows","totalItems","handlePerRowsChange","newPerPage","pageCurrent","window","confirm","clearInput","payloadData","borderRight","borderLeft","onKeyPress","key","preventDefault","handleSearch","noHeader","highlightOnHover","paginationTotalRows","paginationPerPage","pagination","paginationServer","onChangePage","onChangeRowsPerPage","getProduct","storeProduct","getProductCategory","storeProductCategory","getItems","indexProduct","nama_product","harga","stok","imageProduct","dataProduct","setDataProduct","dataProductCategory","setDataProductCategory","options","setOptions","productName","setProductName","category","setCategory","stock","setStock","sellingPrice","setSellingPrice","buyingPrice","setBuyingPrice","setDescription","image","setImage","getDataCategoryProduct","convertCurrency","parseFloat","product_category","photoProduct","ProductCategoryService","ProductService","total","formatCurrency","handleSearchProduct","query","ItemsService","onInputChangeProduct","result","find","itemName","toLowerCase","defaultInputValue","filterBy","labelKey","minLength","selected","length","Number","onSearch","onInputChange","renderMenuItemChildren","option","Form","Control","as","map","REACT_APP_URL_FOTO_Product","getSubmissionCategory","storeSubmissionCategory","getSpesificSubmissionCategory","indexSubmissionCategory","submissionType","maximumSubmission","dataCategorySubmission","setDataCategorySubmission","SubmissionCategoryService","indexProductCategory","ProductSubmissionCategoryService","getSubmission","storeSubmission","laporan","showSubmission","storeSubmissionAttachment","updateStatus","update","deleteSUbmission","updateFullfilment","deleteSubmission","history","useHistory","dataSubmissions","setDataSubmissions","detail","setDetail","parse","fullfilment","payloadFullfilment","setPayloadFullfilment","cursor","push","dayjs","date","format","amount","statusSubmission","handleApporoveStatus","handleRejectStatus","includes","OverlayTrigger","placement","overlay","Tooltip","Badge","variant","SubmissionService","console","log","backgroundColor","dataStatus","Group","controlId","Col","sm","marginTop","Label","getTransactions","storeTransaction","getWallet","storeWallet","getShow","useParams","dataSubmission","setDataSubmission","fileAttachment","setFileAttachment","dataWallet","setDataWallet","submissionId","walletId","attachmentTransaction","payloadPayment","setPayloadPayment","Row","column","walletName","InputGroup","Prepend","Text","File","label","lang","data-browse","custom","paddingTop","xs","textAlign","dueDate","submissionName","customerName","submission_category","borderRadius","Table","responsive","qty","discount","tax","colSpan","dataItem","calculateTotalPaid","calculateTotal","Tabs","defaultActiveKey","Tab","eventKey","submission_attachments","attachmentSubmissoin","href","capture","handleUploadAttachment","float","cart","setCart","dataItems","setDataItems","dataCategory","setDataCategory","payloadCustomItem","setPayloadCustomItem","categoryId","ItemService","optsCategory","datas","indexs","findIndex","datass","itemss","item","keranjang","addProductToCart","checkOut","min","d","productId","addCustomItem","r","count","onCountChange","changeItems","totalHarga","totalHargaDiscount","dataDelete","deleteCart","totalBefore","setTotalBefore","totBefore","payloadStatus","indexWallet","WalletService","submission","TransactionsService","typeSubmission","setTypeSubmission","dateStart","setDateStart","dateEnd","setDateEnd","price","Check","inline","checked","loginByAuth","document","getElementById","classList","remove","getProfile","logOut","onUserLogout","dropdownRef","useRef","isDropdownOpen","dropdownState","updateDropdownState","toggleDropdown","handleClickOutside","event","current","contains","addEventListener","removeEventListener","ref","data-toggle","AuthService","toggleMenuSidebar","data-widget","rel","defineAbility","can","cannot","createCanBoundTo","ability","opacity","data-accordion","exact","Can","do","on","onUserLoad","isMenuSidebarCollapsed","menusidebarState","updateMenusidebarState","fetchProfile","add","path","component","Laporan","Wallet","Pemasukan","CreatePemasukan","Pengeluaran","PurchaseOrder","CreatePengeluaran","ProductCategory","SubmissionCategory","ManageUser","Product","Profile","Items","Invoice","EditPemasukan","EditPengeluaran","Transactions","onKeyDown","icons","facebook","google","googlePlus","AppButton","spinnerTemplate","iconTemplate","children","icon","disabled","otherProps","Spinner","animation","aria-hidden","onUserLogin","isAuthLoading","setAuthLoading","formik","useFormik","initialValues","values","go","handleSubmit","getFieldProps","touched","errors","block","rest","isAuthenticated","render","location","pathname","from","App","resources","en","translation","translationEN","tr","translationTR","es","fr","de","translationDE","i18n","initReactI18next","init","lng","interpolation","escapeValue","react","wait","Boolean","hostname","match","configure","autoClose","draggable","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","pauseOnHover","ReactDOM","navigator","serviceWorker","ready","registration","unregister","require","exports","num","c","isNaN","Math","abs","undefined","n","s","i","String","parseInt","toFixed","j","substr","replace","slice"],"mappings":"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","file":"static/js/main.eef6fdd5.chunk.js","sourcesContent":["import React from 'react';\nimport SmallBox from '../components/small-box/SmallBox';\n\nconst Dashboard = () => {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"alert alert-info\" role=\"alert\">\n                Selamat Datang Di Aplikasi Pendukung Manajemen Pelaku Bisnis\n            </div>\n            {/* <div className=\"row\">\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={150}\n                        title=\"New Orders\"\n                        type=\"info\"\n                        icon=\"ion-android-people\"\n                        navigateTo=\"/\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={53}\n                        title=\"Bounce Rate\"\n                        type=\"success\"\n                        navigateTo=\"/\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={44}\n                        title=\"User Registrations\"\n                        type=\"warning\"\n                        navigateTo=\"/\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={65}\n                        title=\"Unique Visitors\"\n                        type=\"danger\"\n                        navigateTo=\"/\"\n                    />\n                </div>\n            </div> */}\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React from 'react'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: 'rgb(17, 78, 96)',\n    },\n}));\n\nconst LoadingSpinner = ({isLoading}) => {\n    const classes = useStyles();\n\n    return (\n        <Backdrop className={classes.backdrop} open={isLoading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    )\n}\n\nexport default LoadingSpinner;","export const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const STORE_USER = 'STORE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\n\nexport const LOAD_PRODUCTS = 'LOAD_PRODUCTS';\nexport const STORE_PRODUCT = 'STORE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\n\nexport const LOAD_SUBMISSION_CATEGORY = 'LOAD_SUBMISSION_CATEGORY';\nexport const STORE_SUBMISSION_CATEGORY = 'STORE_SUBMISSION_CATEGORY';\nexport const DELETE_SUBMISSION_CATEGORY = 'DELETE_SUBMISSION_CATEGORY';\nexport const UPDATE_SUBMISSION_CATEGORY = 'UPDATE_SUBMISSION_CATEGORY';\n\nexport const LOAD_PRODUCT_CATEGORY = 'LOAD_PRODUCT_CATEGORY';\nexport const STORE_PRODUCT_CATEGORY = 'STORE_PRODUCT_CATEGORY';\nexport const DELETE_PRODUCT_CATEGORY = 'DELETE_PRODUCT_CATEGORY';\nexport const UPDATE_PRODUCT_CATEGORY = 'UPDATE_PRODUCT_CATEGORY';\n\nexport const LOAD_WALLET = 'LOAD_WALLET';\nexport const STORE_WALLET = 'STORE_WALLET';\nexport const DELETE_WALLET = 'DELETE_WALLET';\nexport const UPDATE_WALLET = 'UPDATE_WALLET';\n\nexport const GET_COMPANY = 'GET_COMPANY';\nexport const STORE_COMPANY = 'STORE_COMPANY';\nexport const UPDATE_COMPANY = 'UPDATE_COMPANY';\n\nexport const GET_ITEMS = \"GET_ITEMS\"\nexport const LOAD_ITEMS = \"LOAD_ITEMS\"\n\nexport const LOAD_SUBMISSIONS = \"LOAD_SUBMISSIONS\"\nexport const STORE_SUBMISSIONS = \"STORE_SUBMISSIONS\"\nexport const SHOW_SUBMISSIONS = \"SHOW_SUBMISSIONS\"\nexport const UPDATE_STATUS = \"UPDATE_STATUS\"\nexport const DELETE_SUBMISSION = \"DELETE_SUBMISSION\"\nexport const UPDATE_FULLFILMENT = \"UPDATE_FULLFILMENT\"\n\nexport const LOAD_TRANSACTIONS = \"LOAD_TRANSACTIONS\"","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    isLoggedIn: !!localStorage.getItem('token'),\n    token: localStorage.getItem('token'),\n    currentUser: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_USER:\n            localStorage.setItem('token', action.token.token);\n            localStorage.setItem('user', JSON.stringify(action.token.user));\n            return {\n                ...state,\n                isLoggedIn: true,\n                token: action.token.token,\n            };\n        case ActionTypes.LOGOUT_USER:\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            return {\n                ...state,\n                isLoggedIn: false,\n                token: null,\n                currentUser: {}\n            };\n        case ActionTypes.LOAD_USER:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    users: [],\n    detailUser: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_USERS: \n            return {\n                ...state,\n                users: action.users\n            };\n        case ActionTypes.STORE_USER: {\n            const newUser = [...state.users]\n            newUser.splice(0, 0, action.detailUser)\n            return {\n                ...state,\n                detailUser: action.detailUser,\n                users: newUser\n            };\n        }\n        case ActionTypes.UPDATE_USER: {\n            const updateUser = [...state.users]\n            updateUser.splice(action.index, 1)\n            updateUser.splice(action.index, 0, action.detailUser)\n            return {\n                ...state,\n                detailUser: action.detailUser,\n                users: updateUser\n            };\n        }\n        case ActionTypes.DELETE_USER: {\n            const deleteUser = [...state.users]\n            deleteUser.splice(action.index, 1)\n            return {\n                ...state,\n                users: deleteUser,\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    products: [],\n    detailProduct: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_PRODUCTS:\n            return {\n                ...state,\n                products: action.products\n            };\n        case ActionTypes.STORE_PRODUCT: {\n            const newProduct = [...state.products];\n            newProduct.splice(0, 0, action.detailProduct);\n            return {\n                ...state,\n                detailProduct: action.detailProduct,\n                products: newProduct\n            };\n        }\n        case ActionTypes.UPDATE_PRODUCT: {\n            const updateProduct = [...state.products];\n            updateProduct.splice(action.index, 1);\n            updateProduct.splice(action.index, 0, action.detailProduct);\n            return {\n                ...state,\n                detailProduct: action.detailProduct,\n                products: updateProduct\n            };\n        }\n        case ActionTypes.DELETE_PRODUCT: {\n            const deleteProduct = [...state.products];\n            deleteProduct.splice(action.index, 1);\n            return {\n                ...state,\n                products: deleteProduct\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    productCategory: [],\n    detailProductCategory: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_PRODUCT_CATEGORY:\n            return {\n                ...state,\n                productCategory: action.productCategory\n            };\n        case ActionTypes.STORE_PRODUCT_CATEGORY: {\n            const newProductCategory = [...state.productCategory];\n            newProductCategory.splice(0, 0, action.detailProductCategory);\n            return {\n                ...state,\n                detailProductCategory: action.detailProductCategory,\n                productCategory: newProductCategory\n            };\n        }\n        case ActionTypes.UPDATE_PRODUCT_CATEGORY: {\n            const updateProductCategory = [...state.productCategory];\n            updateProductCategory.splice(action.index, 1);\n            updateProductCategory.splice(\n                action.index,\n                0,\n                action.detailProductCategory\n            );\n            return {\n                ...state,\n                detailProductCategory: action.detailProductCategory,\n                productCategory: updateProductCategory\n            };\n        }\n        case ActionTypes.DELETE_PRODUCT_CATEGORY: {\n            const deleteProductCategory = [...state.productCategory];\n            deleteProductCategory.splice(action.index, 1);\n            return {\n                ...state,\n                productCategory: deleteProductCategory\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    submissionCategory: [],\n    detailSubmissionCategory: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_SUBMISSION_CATEGORY:\n            return {\n                ...state,\n                submissionCategory: action.submissionCategory\n            };\n        case ActionTypes.STORE_SUBMISSION_CATEGORY: {\n            const newSubmissionCategory = [...state.submissionCategory];\n            newSubmissionCategory.splice(0, 0, action.detailSubmissionCategory);\n            return {\n                ...state,\n                detailSubmissionCategory: action.detailSubmissionCategory,\n                submissionCategory: newSubmissionCategory\n            };\n        }\n        case ActionTypes.UPDATE_SUBMISSION_CATEGORY: {\n            const updateSubmissionCategory = [...state.submissionCategory];\n            updateSubmissionCategory.splice(action.index, 1);\n            updateSubmissionCategory.splice(\n                action.index,\n                0,\n                action.detailSubmissionCategory\n            );\n            return {\n                ...state,\n                detailSubmissionCategory: action.detailSubmissionCategory,\n                submissionCategory: updateSubmissionCategory\n            };\n        }\n        case ActionTypes.DELETE_SUBMISSION_CATEGORY: {\n            const deleteSubmissionCategory = [...state.submissionCategory];\n            deleteSubmissionCategory.splice(action.index, 1);\n            return {\n                ...state,\n                submissionCategory: deleteSubmissionCategory\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    wallet: [],\n    detailWallet: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_WALLET:\n            return {\n                ...state,\n                wallet: action.wallet\n            };\n        case ActionTypes.STORE_WALLET: {\n            const newWallet = [...state.wallet];\n            newWallet.splice(0, 0, action.detailWallet);\n            return {\n                ...state,\n                detailWallet: action.detailWallet,\n                wallet: newWallet\n            };\n        }\n        case ActionTypes.UPDATE_WALLET: {\n            const updateWallet = [...state.wallet];\n            updateWallet.splice(action.index, 1);\n            updateWallet.splice(action.index, 0, action.detailWallet);\n            return {\n                ...state,\n                detailWallet: action.detailWallet,\n                wallet: updateWallet\n            };\n        }\n        case ActionTypes.DELETE_WALLET: {\n            const deleteWallet = [...state.wallet];\n            deleteWallet.splice(action.index, 1);\n            return {\n                ...state,\n                wallet: deleteWallet\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    company: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.GET_COMPANY:\n            return {\n                ...state,\n                company: action.company\n            };\n        case ActionTypes.STORE_COMPANY: {\n            let newCompany = {...state.company}\n            newCompany = action.company\n            return {\n                ...state,\n                company: newCompany\n            };\n        }\n        case ActionTypes.UPDATE_COMPANY: {\n            let newCompany = {...state.company}\n            newCompany = action.company\n            return {\n                ...state,\n                company: newCompany\n            };\n        }\n        // case ActionTypes.DELETE_WALLET: {\n        //     const deleteWallet = [...state.wallet];\n        //     deleteWallet.splice(action.index, 1);\n        //     return {\n        //         ...state,\n        //         wallet: deleteWallet\n        //     };\n        // }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    items: [],\n    // detailWallet: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.GET_ITEMS:\n            return {\n                ...state,\n                items: action.items\n            };\n        case ActionTypes.LOAD_ITEMS:\n            return {\n                ...state,\n                items: action.items\n            };\n        // case ActionTypes.STORE_WALLET: {\n        //     const newWallet = [...state.wallet];\n        //     newWallet.splice(0, 0, action.detailWallet);\n        //     return {\n        //         ...state,\n        //         detailWallet: action.detailWallet,\n        //         wallet: newWallet\n        //     };\n        // }\n        // case ActionTypes.UPDATE_WALLET: {\n        //     const updateWallet = [...state.wallet];\n        //     updateWallet.splice(action.index, 1);\n        //     updateWallet.splice(action.index, 0, action.detailWallet);\n        //     return {\n        //         ...state,\n        //         detailWallet: action.detailWallet,\n        //         wallet: updateWallet\n        //     };\n        // }\n        // case ActionTypes.DELETE_WALLET: {\n        //     const deleteWallet = [...state.wallet];\n        //     deleteWallet.splice(action.index, 1);\n        //     return {\n        //         ...state,\n        //         wallet: deleteWallet\n        //     };\n        // }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    submissions: [],\n    detailSubmission: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_SUBMISSIONS:\n            return {\n                ...state,\n                submissions: action.submissions\n            };\n        \n        case ActionTypes.STORE_SUBMISSIONS: {\n            return {\n                ...state,\n            };\n        }\n        case ActionTypes.SHOW_SUBMISSIONS:\n            return {\n                ...state,\n                detailSubmission: action.detailSubmission\n            };\n        case ActionTypes.DELETE_SUBMISSION: {\n            const updateSubmission = [...state.submissions];\n            updateSubmission.splice(action.index, 1);\n            return {\n                ...state,\n                submissions: updateSubmission\n            };\n        }\n        case ActionTypes.UPDATE_STATUS:{\n            const updateSubmission = [...state.submissions]\n            updateSubmission.splice(action.index, 1)\n            updateSubmission.splice(action.index, 0, action.detailSubmission)\n            return {\n                ...state,\n                detailSubmission: action.detailSubmission,\n                submissions: updateSubmission\n            };\n        }\n        case ActionTypes.UPDATE_FULLFILMENT:{\n            const updateSubmission = [...state.submissions]\n            updateSubmission.splice(action.index, 1)\n            updateSubmission.splice(action.index, 0, action.detailSubmission)\n            return {\n                ...state,\n                detailSubmission: action.detailSubmission,\n                submissions: updateSubmission\n            };\n        }\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\n\nconst initialState = {\n    transactions: [],\n    detailWallet: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOAD_TRANSACTIONS:\n            return {\n                ...state,\n                transactions: action.transactions\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import {createStore, combineReducers} from 'redux';\nimport authReducer from './reducers/auth';\nimport userReducer from './reducers/user';\nimport productReducer from './reducers/product';\nimport productCategoryReducer from './reducers/product-category';\nimport submissionCategoryReducer from './reducers/submission-category';\nimport walletReducer from './reducers/wallet';\nimport CompanyReducer from './reducers/company-profile'\nimport ItemsReducer from './reducers/items'\nimport SubmissionsReducer from './reducers/submissions'\nimport TransactionsReducer from './reducers/transactions'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    product: productReducer,\n    productCategory: productCategoryReducer,\n    submissionCategory: submissionCategoryReducer,\n    wallet: walletReducer,\n    company: CompanyReducer,\n    items: ItemsReducer,\n    submissions: SubmissionsReducer,\n    transactions: TransactionsReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react'\nimport axios from 'axios';\nimport {toast} from 'react-toastify';\nimport NProgress from \"nprogress\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nimport store from '../store/index';\nimport * as ActionTypes from '../store/actions';\n\nconst intance = axios.create({\n    baseURL: `${process.env.REACT_APP_API_URL}`\n});\n\nintance.interceptors.request.use(\n    (request) => {\n        NProgress.start();\n        const {token} = store.getState().auth;\n        if (token) {\n            request.headers.Authorization = `Bearer ${token}`;\n        }\n\n        if(request.body instanceof FormData){\n            request[\"headers\"][\"common\"][\"Content-Type\"] = 'multipart/form-data'\n        }\n        return request;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nintance.interceptors.response.use(\n    (response) => {\n        NProgress.done();\n        return response\n    },\n    (error) => {\n        NProgress.done();\n        if (error.response.status === 401) {\n            store.dispatch({type: ActionTypes.LOGOUT_USER});\n        }\n\n        if(error.response.status === 422){\n            let message = \"\";\n            error.response.data.data.forEach(element => {\n                message += `<div>${element.message}</div>`\n            });\n            \n            toast.error(\n                <div>\n                    <h4 style={{ color: \"white\", fontWeight: \"bold\" }}>There is wrong data !!</h4>\n                    {ReactHtmlParser(message)}\n                </div>\n            );\n        }else{\n            toast.error(\n                <div>\n                    {error.response.data.message}\n                </div>\n            );\n        }\n\n\n        return Promise.reject(error);\n    }\n);\n\nexport default intance;\n","import instance from '../utils/axios';\n\nexport const getCompany = async (opts = {}) => {\n    const data = await instance.get('/company-profile', opts);\n    return data;\n};\n\nexport const storeCompany = async (payload, opts = {}) => {\n    const data = await instance.post('/company-profile', payload, opts);\n    return data;\n};\n\nexport const deleteProduct = async (id, opts = {}) => {\n    const data = await instance.delete(`/products/${id}`, opts);\n    return data;\n};\n\nexport const updateCompany = async (id, payload, opts = {}) => {\n    const data = await instance.put(`company-profile/${id}`, payload, opts);\n    return data;\n};\n","import React from \"react\";\nimport { Button, Modal as ReactModal, Form, Row, Col } from \"react-bootstrap\";\n\nclass Modal extends React.Component {\n  render() {\n    const {\n      show,\n      size,\n      title,\n      customTitle,\n      body,\n      onSubmit,\n      customSubmit,\n      customButton,\n      submitTitle,\n      closeTitle,\n      onHide,\n      onClose,\n      onBackDrop,\n      centered\n    } = this.props;\n    return (\n      <ReactModal\n        show={show}\n        onHide={onHide}\n        dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n        centered={centered ? centered : null}\n        backdrop={onBackDrop ? onBackDrop : \"static\"}\n        size={size ? size : \"md\"}\n      >\n        {title ? (\n          <ReactModal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"3rem\" }}\n          >\n            <ReactModal.Title id=\"example-custom-modal-styling-title\" style={{\n              fontWeight: \"bold\",\n              color: \"#000\"\n            }}>\n              {title}\n            </ReactModal.Title>\n          </ReactModal.Header>\n        ) : null}\n        {customTitle ? (\n          <ReactModal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"3rem\" }}\n          >\n            <ReactModal.Title id=\"example-custom-modal-styling-title\" style={{\n              fontWeight: \"bold\",\n              color: \"#000\"\n            }}>\n              {customTitle}\n            </ReactModal.Title>\n          </ReactModal.Header>\n        ) : null}\n        <ReactModal.Body>{body}</ReactModal.Body>\n        <ReactModal.Footer\n          style={{ border: \"none\", padding: \"2rem 3rem 3.5rem 3rem\" }}\n        >\n          {/* {onHide ? (\n            <Button className=\"btn btn-secondary-semanggi\" onClick={onHide}>\n              Cancel\n            </Button>\n          ) : null} */}\n          {onClose ? (\n            <Button className=\"btn btn-secondary\" onClick={onClose}>\n              {closeTitle ? closeTitle : \"Cancel\"}\n            </Button>\n          ) : null}\n          {onSubmit ? (\n            <Button className=\"btn btn-success\" onClick={onSubmit}>\n              {submitTitle ? submitTitle : \"Submit\"}\n            </Button>\n          ) : null}\n          {customButton ? customButton : null}\n        </ReactModal.Footer>\n      </ReactModal>\n    );\n  }\n}\n\nModal.defaultProps = {\n  show: false,\n};\n\nexport default Modal;","import React, { useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport {connect} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner'\n\nimport * as ProfileService from '../../services/company-profile';\nimport * as ActionTypes from '../../store/actions';\nimport Modal from '../../components/Modal';\n\nconst Profile = ({getCompany, company, updateCompany, storeCompany}) => {\n    const [t] = useTranslation();\n\n    const [loading, setLoading] = React.useState(false);\n    const [data, setData] = React.useState({});\n    const [show, setShow] = React.useState(false);\n    const [showImage, setShowImage] = React.useState(false);\n    const [payload, setPayload] = React.useState({\n        id: null,\n        ownerName: null,\n        companyName: null,\n        companyAddress: null,\n        companyNumber: null,\n        companyEmail: null,\n        companyTelp: null,\n        description: null,\n        companyLogo: null\n    });\n    const [tabIndex, setTabIndex] = React.useState(-1);\n\n    useEffect(() => {\n        setLoading(!loading);\n            ProfileService.getCompany().then((response) => {\n                setLoading(false)\n                getCompany(response.data.data);\n            })\n    }, [])\n\n    useEffect(() => {\n        setData(company);\n    }, [company]);\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            ownerName: null,\n            companyName: null,\n            companyAddress: null,\n            companyNumber: null,\n            companyEmail: null,\n            companyTelp: null,\n            description: null\n        });\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = (index) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, ...newData} = data;\n            setPayload({...newData});\n        } else {\n            clearInput();\n        }\n    };\n\n    const handleShowImage = (index) => {\n        setShowImage(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, companyLogo, ...newData} = data;\n            setPayload({...newData});\n        }\n    };\n\n    const handleCloseImage = () => setShowImage(false);\n\n    const handleSubmitImage = () => {\n        setLoading(!loading);\n        const newPayload = new FormData()\n        newPayload.append('ownerName', payload.ownerName)\n        newPayload.append('companyName', payload.companyName)\n        newPayload.append('companyAddress', payload.companyAddress)\n        newPayload.append('companyNumber', payload.companyNumber)\n        newPayload.append('companyEmail', payload.companyEmail)\n        newPayload.append('companyTelp', payload.companyTelp)\n        newPayload.append('companyLogo', payload.companyLogo)\n        newPayload.append('description', payload.description)\n        ProfileService.updateCompany(payload.id, newPayload)\n        .then((response) => {\n            setTimeout(() => {\n                updateCompany(response.data);\n                setLoading(false);\n                setShowImage(false);\n                toast.success('Profil Company Logo Updated!');\n            }, 1000);\n        })\n        .catch((error) => {\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        });\n    };\n\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            ProfileService.storeCompany(payload)\n                .then((response) => {\n                    setTimeout(() => {\n                        storeCompany(response.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Profil Company Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            ProfileService.updateCompany(payload.id, payload)\n                .then((response) => {\n                    setTimeout(() => {\n                        updateCompany(response.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Profil Company Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    return (\n        <>\n            <LoadingSpinner \n                isLoading={loading}\n            />\n            {/* Modal Company Form */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1 ? 'Atur Company Profile' : 'Edit Company Profile'}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Owner Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Owner Name\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.ownerName}\n                                    placeholder=\"Owner Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            ownerName: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Company Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Company Name\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.companyName}\n                                    placeholder=\"Company Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyName: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Company Address\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Company Address\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Company Address\"\n                                    defaultValue={payload.companyAddress}\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyAddress: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"NPWP\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                NPWP\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.companyNumber}\n                                    placeholder=\"NPWP\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyNumber: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Company Email\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Company Email\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.companyEmail}\n                                    placeholder=\"Company Email\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyEmail: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Company Telp\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Company Telp\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.companyTelp}\n                                    placeholder=\"Company Telp\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyTelp: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Description\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Description\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.description}\n                                    placeholder=\"Description\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            description: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Ubah Logo Company\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={showImage}\n                onHide={handleCloseImage}\n                onClose={handleCloseImage}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmitImage}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Owner Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Upload File\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.companyLogo}\n                                    placeholder=\"Owner Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            companyLogo: e.target.files[0]\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.user.profile')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.user.profile')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    {data ?\n                                    <div>\n                                        <button\n                                                className=\"btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(1)}\n                                            >\n                                                Update Company Profile\n                                        </button>\n                                        <div className=\"text-center\">\n                                            <img\n                                                onClick={() => handleShowImage(1)}\n                                                className=\"profile-user-img img-fluid img-circle\"\n                                                src={data.companyLogo\n                                                    ? process.env.REACT_APP_URL_FOTO_COMPANY +\n                                                      data.companyLogo\n                                                    : '/img/default-profile.png'}\n                                                alt=\"User profile\"\n                                            />\n                                        </div>\n                                        <h3 className=\"profile-username text-center\">\n                                            {data.companyName}\n                                        </h3>\n                                        <p className=\"text-muted text-center\">\n                                            {data.description}\n                                        </p>\n                                        <ul className=\"list-group list-group-unbordered mb-3\">\n                                            <li className=\"list-group-item\">\n                                                <b>Owner Name</b>\n\n                                                <span className=\"float-right\">\n                                                    {data.ownerName}\n                                                </span>\n                                            </li>\n                                            <li className=\"list-group-item\">\n                                                <b>Company Address</b>\n                                                <span className=\"float-right\">\n                                                    {data.companyAddress}\n                                                </span>\n                                            </li>\n                                            <li className=\"list-group-item\">\n                                                <b>NPWP</b>\n                                                <span className=\"float-right\">\n                                                    {data.companyNumber}\n                                                </span>\n                                            </li>\n                                            <li className=\"list-group-item\">\n                                                <b>Phone</b>\n                                                <span className=\"float-right\">\n                                                    {data.companyTelp}\n                                                </span>\n                                            </li>\n                                            <li className=\"list-group-item\">\n                                                <b>Email</b>\n                                                <span className=\"float-right\">\n                                                    {data.companyEmail}\n                                                </span>\n                                            </li>\n                                        </ul>\n                                        <small className=\"float-right mt-3\">\n                                            Last Updated: Fri Apr 30 2021 16:42:56\n                                        </small>\n                                    </div> :\n                                    <div className=\"text-center\">\n                                        <button\n                                                className=\"btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Atur Company Profile\n                                        </button>\n                                    </div>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    company: state.company.company,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getCompany: (company) =>\n        dispatch({\n            type: ActionTypes.GET_COMPANY,\n            company\n        }),\n    storeCompany: (company) =>\n        dispatch({\n            type: ActionTypes.STORE_COMPANY,\n            company\n        }),\n    updateCompany: (company) =>\n        dispatch({\n            type: ActionTypes.UPDATE_COMPANY,\n            company,\n        })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import instance from '../utils/axios';\n\nexport const getUser = async (opts = {}) => {\n    const data = await instance.get('/users', opts);\n    return data;\n}\n\nexport const storeUser = async (payload, opts = {}) => {\n    const data = await instance.post('/users', payload, opts);\n    return data;\n}\n\nexport const deleteUser = async (id, opts = {}) => {\n    const data = await instance.delete(`/users/${id}`, opts);\n    return data;\n}\n\nexport const updateUser = async (id, payload, opts ={}) => {\n    const data = await instance.put(`users/${id}`, payload, opts)\n    return data;\n}","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as UserService from '../../services/user';\n\nconst ManageUser = ({getUser, users, storeUser, deleteUser, updateUser}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        username: null,\n        fullName: null,\n        email: null,\n        password: null,\n        role: null,\n        imageUser: null\n    });\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataUser, setDataUser] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [dataImage, setDataImage] = React.useState(null);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataUser(users);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '10%'\n            },\n            {\n                name: 'Nama',\n                selector: 'fullName'\n            },\n            {\n                name: 'Username',\n                selector: 'username'\n            },\n            {\n                name: 'Email',\n                selector: 'email'\n            },\n            {\n                name: 'Role',\n                selector: 'role'\n            },\n            {\n                name: 'Image',\n                cell: (row, index) => (\n                    <div>\n                        <img\n                            src={\n                                row.imageUser\n                                    ? process.env.REACT_APP_URL_FOTO_USER +\n                                      row.imageUser\n                                    : '/img/default-profile.png'\n                            }\n                            width=\"75\"\n                            height=\"75\"\n                            className=\"elevation-2 mt-2 mb-2\"\n                            alt=\"User\"\n                        />\n                    </div>\n                )\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleShow(index, row)}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i>\n{' '}\n                        <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [users]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: search\n            }\n        };\n        setLoading(!loading);\n        UserService.getUser(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getUser(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (id, index) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            // eslint-disable-line no-alert\n\n            setLoading(!loading);\n            UserService.deleteUser(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteUser(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('User Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, imageUser, ...newData} = data;\n            setDataImage(data.imageUser);\n            setPayload({...newData});\n        } else {\n            clearInput();\n            setDataImage(null);\n        }\n    };\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            fullName: null,\n            username: null,\n            email: null,\n            password: null,\n            role: null,\n            imageUser: null\n        });\n    };\n\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            const payloadData = new FormData();\n            payloadData.append('fullName', payload.fullName);\n            payloadData.append('password', payload.password);\n            payloadData.append('email', payload.email);\n            payloadData.append('username', payload.username);\n            payloadData.append('role', payload.role);\n            payloadData.append('imageUser', payload.imageUser);\n            UserService.storeUser(payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        storeUser(data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('User Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            const payloadData = new FormData();\n            payloadData.append('fullName', payload.fullName);\n            payloadData.append('email', payload.email);\n            payloadData.append('username', payload.username);\n            payloadData.append('role', payload.role);\n            payloadData.append('imageUser', payload.imageUser);\n            UserService.updateUser(payload.id, payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        updateUser(tabIndex, data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('User Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1 ? 'Create User' : 'Edit User'}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Full Name\"\n                                className=\"col-sm-2 col-form-label\"\n                            >\n                                Full Name\n                            </label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.fullName}\n                                    placeholder=\"Full Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            fullName: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Email\"\n                                className=\"col-sm-2 col-form-label\"\n                            >\n                                Email\n                            </label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.email}\n                                    placeholder=\"Email\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            email: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Username\"\n                                className=\"col-sm-2 col-form-label\"\n                            >\n                                Username\n                            </label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.username}\n                                    placeholder=\"Username\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            username: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        {tabIndex === -1 && (\n                            <div className=\"form-group row\">\n                                <label\n                                    htmlFor=\"Password\"\n                                    className=\"col-sm-2 col-form-label\"\n                                >\n                                    Password\n                                </label>\n                                <div className=\"col-sm-10\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        defaultValue={payload.password}\n                                        placeholder=\"Password\"\n                                        onChange={(e) => {\n                                            setPayload({\n                                                ...payload,\n                                                password: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Role\"\n                                className=\"col-sm-2 col-form-label\"\n                            >\n                                Role\n                            </label>\n                            <div className=\"col-sm-10\">\n                                <select\n                                    className=\"form-control\"\n                                    defaultValue={payload.role}\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            role: e.target.value\n                                        });\n                                    }}\n                                >\n                                    <option value=\"\">\n                                        -Please choose a role-\n                                    </option>\n                                    <option value=\"admin\">Admin</option>\n                                    <option value=\"karyawan\">Karyawan</option>\n                                </select>\n                            </div>\n                        </div>\n                        {tabIndex !== -1 && (\n                            <div className=\"form-group row\">\n                                <label\n                                    htmlFor=\"Foto\"\n                                    className=\"col-sm-2 col-form-label\"\n                                >\n                                    {' '}\n                                </label>\n                                <div className=\"col-sm-10\">\n                                    <img\n                                        src={\n                                            dataImage\n                                                ? process.env\n                                                      .REACT_APP_URL_FOTO_USER +\n                                                  dataImage\n                                                : '/img/default-profile.png'\n                                        }\n                                        width=\"100\"\n                                        height=\"100\"\n                                        className=\"elevation-2\"\n                                        alt=\"User\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Foto\"\n                                className=\"col-sm-2 col-form-label\"\n                            >\n                                Image\n                            </label>\n                            <div className=\"col-sm-10\">\n                                <div className=\"custom-file\">\n                                    <input\n                                        type=\"file\"\n                                        className=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        onChange={(e) => {\n                                            setPayload({\n                                                ...payload,\n                                                imageUser: e.target.files[0]\n                                            });\n                                        }}\n                                    />\n                                    <label\n                                        htmlFor=\"Foto\"\n                                        className=\"custom-file-label\"\n                                    >\n                                        {payload.imageUser\n                                            ? payload.imageUser.name\n                                            : 'Choose file'}\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Manage User</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Manage User\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search User\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create User\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataUser}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    users: state.user.users,\n    detailUser: state.user.detailUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getUser: (users) => dispatch({type: ActionTypes.LOAD_USERS, users}),\n    storeUser: (detailUser) =>\n        dispatch({type: ActionTypes.STORE_USER, detailUser}),\n    deleteUser: (indexUser) =>\n        dispatch({type: ActionTypes.DELETE_USER, index: indexUser}),\n    updateUser: (indexUser, detailUser) =>\n        dispatch({type: ActionTypes.UPDATE_USER, detailUser, index: indexUser})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUser);\n","import instance from '../utils/axios';\n\nexport const getProduct = async (opts = {}) => {\n    const data = await instance.get('/products', opts);\n    return data;\n};\n\nexport const storeProduct = async (payload, opts = {}) => {\n    const data = await instance.post('/products', payload, opts);\n    return data;\n};\n\nexport const deleteProduct = async (id, opts = {}) => {\n    const data = await instance.delete(`/products/${id}`, opts);\n    return data;\n};\n\nexport const updateProduct = async (id, payload, opts = {}) => {\n    const data = await instance.put(`products/${id}`, payload, opts);\n    return data;\n};\n","import instance from '../utils/axios';\n\nexport const getProductCategory = async (opts = {}) => {\n    const data = await instance.get('/product-categories', opts);\n    return data;\n};\n\nexport const storeProductCategory = async (payload, opts = {}) => {\n    const data = await instance.post('/product-categories', payload, opts);\n    return data;\n};\n\nexport const deleteProductCategory = async (id, opts = {}) => {\n    const data = await instance.delete(`/product-categories/${id}`, opts);\n    return data;\n};\n\nexport const updateProductCategory = async (id, payload, opts = {}) => {\n    const data = await instance.put(`product-categories/${id}`, payload, opts);\n    return data;\n};\n","import instance from '../utils/axios';\n\nexport const getItems = async (opts = {}) => {\n    const data = await instance.get('/get-items', opts);\n    return data;\n};\n\nexport const get = async (opts = {}) => {\n    const data = await instance.get('/items', opts);\n    return data;\n};\n\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {Form}  from 'react-bootstrap'; \nimport { formatCurrency } from \"@app/utils/number\";\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead'\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as ProductService from '../../services/product';\nimport * as ProductCategoryService from '../../services/product-category'\nimport * as ItemsService from '../../services/items';\n\nconst Product = ({\n    getProduct,\n    products,\n    storeProduct,\n    deleteProduct,\n    updateProduct,\n    getProductCategory,\n    productCategory,\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        nama_product: null,\n        harga: null,\n        stok: null,\n        imageProduct: null\n    });\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataProduct, setDataProduct] = React.useState([]);\n    const [dataProductCategory, setDataProductCategory] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [dataImage, setDataImage] = React.useState(null);\n    const [columns, setColumn] = React.useState([]);\n    const [options, setOptions] = React.useState([]);\n    const [productName, setProductName] = React.useState('');\n    const [category, setCategory] = React.useState('');\n    const [stock, setStock] = React.useState('');\n    const [sellingPrice, setSellingPrice] = React.useState('');\n    const [buyingPrice, setBuyingPrice] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [image, setImage] = React.useState(null)\n\n\n    useEffect(() => {\n        getData(page, size);\n        getDataCategoryProduct();\n    }, []);\n\n    useEffect(() => {\n        setDataProduct(products);\n        setDataProductCategory(productCategory)\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '10%'\n            },\n            {\n                name: 'Nama',\n                selector: 'productName'\n            },\n            {\n                name: 'Stock',\n                selector: 'stock'\n            },\n            {\n                name: 'Harga Jual',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.sellingPrice))}\n                    </div>\n                )\n            },\n            {\n                name: 'Harga Jual',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.buyingPrice))}\n                    </div>\n                )\n            },\n            {\n                name: 'Kategori',\n                selector: (row, index) => (\n                    <div>\n                        {row.product_category ? row.product_category.productCategory : ''}\n                    </div>\n                )\n            },\n            {\n                name: 'Status',\n                selector: 'status'\n            },\n            {\n                name: 'Image',\n                cell: (row, index) => (\n                    <div>\n                        <img\n                            src={\n                                row.photoProduct\n                                    ? process.env.REACT_APP_URL_FOTO_PRODUCT +\n                                      row.photoProduct\n                                    : '/img/default-product.png'\n                            }\n                            width=\"75\"\n                            height=\"75\"\n                            className=\"elevation-2 mt-2 mb-2\"\n                            alt=\"Product\"\n                        />\n                    </div>\n                )\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleShow(index, row)}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i>\n                        {' '}\n                        <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [products, productCategory]);\n\n    const getDataCategoryProduct = async () => {\n        setLoading(!loading);\n        ProductCategoryService.getProductCategory({}).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getProductCategory(data.data.data.rows);\n            }, 1000);\n        }).catch((error) => {\n            setLoading(false);\n        });\n        \n    }\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: search\n            }\n        };\n        setLoading(!loading);\n        ProductService.getProduct(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getProduct(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        }).catch((error) => {\n            setLoading(false);\n        });\n    };\n\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (id, index) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            // eslint-disable-line no-alert\n\n            setLoading(!loading);\n            ProductService.deleteProduct(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteProduct(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Product Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, imageProduct, ...newData} = data;\n            setDataImage(data.imageProduct);\n            setPayload({...newData});\n        } else {\n            clearInput();\n            setDataImage(null);\n        }\n    };\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            nama_product: null,\n            harga: null,\n            stok: null,\n            imageProduct: null\n        });\n    };\n\n    const filterBy = () => true;\n\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            const payloadData = new FormData();\n            payloadData.append('productName', productName);\n            payloadData.append('productCategoryId', category);\n            payloadData.append('stock', stock);\n            payloadData.append('sellingPrice', sellingPrice);\n            payloadData.append('buyingPrice', buyingPrice);\n            payloadData.append('description', description);\n            payloadData.append('photoProduct', image);\n            ProductService.storeProduct(payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        storeProduct(data.data);\n                        setLoading(false);\n                        setShow(false);\n                        getData(0, size);\n                        toast.success('Product Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            const payloadData = new FormData();\n            payloadData.append('nama_product', payload.nama_product);\n            payloadData.append('harga', payload.harga);\n            payloadData.append('stok', payload.stok);\n            payloadData.append('imageProduct', payload.imageProduct);\n            ProductService.updateProduct(payload.id, payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        updateProduct(tabIndex, data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Product Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleSearchProduct = async (query) => {\n        setLoading(!loading)\n        const opts = {\n            params: {\n                'q' : query\n            }\n        }\n\n        ItemsService.getItems(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                setOptions(data.data.data.rows);\n            }, 1000);\n        }).catch((error) => {\n            setLoading(false);\n        });\n    };\n\n\n    const onInputChangeProduct = async (query) => {\n        setTimeout(() => {\n\n            setLoading(!loading)\n            const opts = {\n                params: {\n                    'q' : query\n                }\n            }\n\n            ItemsService.getItems(opts).then((data) => {\n                setTimeout(() => {\n                    setLoading(false);\n                    setOptions(data.data.data.rows);\n                    const result = data.data.data.rows.find((value) => value.itemName.toLowerCase() === query.toLowerCase())\n                    if(result){\n                        setProductName(result.itemName)\n                    }else{\n                        setProductName(query)\n                    }\n                }, 1000);\n            }).catch((error) => {\n                setLoading(false);\n            });\n            // let opts = {\n            //     params: {\n            //         'filter[item_name][like]' : query\n            //     }\n            // }\n            // this.props.getItemSubmission(opts).then(() => {\n            //     let data = this.props.dataItem.find((value) => value.attributes.item_name.toLowerCase() == query.toLowerCase())\n            //     if(data){\n            //         this.setState({\n            //             product_name: data.attributes.item_name,\n            //             selling_price: data.attributes.selling_price,\n            //             id: data.attributes.id,\n            //             buying_price: data.attributes.buying_price,\n            //             dataDetailProduct: this.props.dataItem\n            //         })\n            //     }else{\n            //         this.setState({\n            //             product_name: query,\n            //             selling_price: null,\n            //             id: null,\n            //             buying_price: null,\n            //             dataDetailCategory: null\n            //         })\n            //     }\n            // })\n        }, 1000)\n    }\n\n\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1\n                                ? 'Create Product'\n                                : 'Edit Product '}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Product Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Product Name\n                            {' '}\n                            </label>\n                            <div className=\"col-sm-9\">\n                            <AsyncTypeahead\n                                defaultInputValue={productName}\n                                filterBy={filterBy}\n                                labelKey=\"itemName\"\n                                id=\"async-example\"\n                                isLoading={loading}\n                                minLength={1}\n                                onChange={selected => {\n                                    if (selected.length !== 0) {\n                                        setProductName(selected[0].itemName)\n                                        setSellingPrice(Number(selected[0].sellingPrice))\n                                        setBuyingPrice(Number(selected[0].buyingPrice))\n                                        \n                                    }\n                                }}\n                                onSearch={handleSearchProduct}\n                                onInputChange={onInputChangeProduct}\n                                options={options}\n                                placeholder=\"Search product...\"\n                                renderMenuItemChildren={(option, props) => (\n                                    <div key={option.id}>\n                                        <span>{option.itemName}</span>\n                                    </div>\n                                )}\n                            />\n\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Product Category\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Product Category\n                            {' '}\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <Form.Control \n                                    as=\"select\" \n                                    defaultValue={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                    <option value=\"\">-Choose Product Category-</option>\n                                    {\n                                        dataProductCategory && dataProductCategory.map((data) => (\n                                            <option key={data.id} value={data.id}>{data.productCategory}</option>\n                                        ))\n                                    }\n                                </Form.Control>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Stock\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Stock\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    defaultValue={stock}\n                                    placeholder=\"Stock\"\n                                    onChange={(e) => setStock(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Selling Price\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Selling Price\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    defaultValue={sellingPrice}\n                                    placeholder=\"Selling Price\"\n                                    onChange={(e) => setSellingPrice(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Buying Price\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Buying Price\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    defaultValue={buyingPrice}\n                                    placeholder=\"Buying Price\"\n                                    onChange={(e) => setBuyingPrice(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"stok\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Description\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Description\"\n                                    defaultValue={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        {tabIndex !== -1 && (\n                            <div className=\"form-group row\">\n                                <label\n                                    htmlFor=\"Foto\"\n                                    className=\"col-sm-3 col-form-label\"\n                                >\n                                    {' '}\n                                </label>\n                                <div className=\"col-sm-9\">\n                                    <img\n                                        src={\n                                            dataImage\n                                                ? process.env\n                                                      .REACT_APP_URL_FOTO_Product +\n                                                  dataImage\n                                                : '/img/default-profile.png'\n                                        }\n                                        width=\"100\"\n                                        height=\"100\"\n                                        className=\"elevation-2\"\n                                        alt=\"Product\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Foto\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Product Photo\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <div className=\"custom-file\">\n                                    <input\n                                        type=\"file\"\n                                        className=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        onChange={(e) => setImage(e.target.files[0])}\n                                    />\n                                    <label\n                                        htmlFor=\"Foto\"\n                                        className=\"custom-file-label\"\n                                    >\n                                        {image\n                                            ? image.name\n                                            : 'Choose file'}\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Manage Product</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Manage Product\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Product\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Product\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataProduct}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\nconst mapStateToProps = (state) => ({\n    products: state.product.products,\n    detailProduct: state.product.detailProduct,\n    productCategory: state.productCategory.productCategory\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProduct: (products) =>\n        dispatch({type: ActionTypes.LOAD_PRODUCTS, products}),\n    storeProduct: (detailProduct) =>\n        dispatch({type: ActionTypes.STORE_PRODUCT, detailProduct}),\n    deleteProduct: (indexProduct) =>\n        dispatch({type: ActionTypes.DELETE_PRODUCT, index: indexProduct}),\n    updateProduct: (indexProduct, detailProduct) =>\n        dispatch({\n            type: ActionTypes.UPDATE_PRODUCT,\n            detailProduct,\n            index: indexProduct\n        }),\n    getProductCategory: (productCategory) => dispatch({type: ActionTypes.LOAD_PRODUCT_CATEGORY, productCategory})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","import instance from '../utils/axios';\n\nexport const getSubmissionCategory = async (opts = {}) => {\n    const data = await instance.get('/submission-categories', opts);\n    return data;\n};\n\nexport const storeSubmissionCategory = async (payload, opts = {}) => {\n    const data = await instance.post('/submission-categories', payload, opts);\n    return data;\n};\n\nexport const deleteSubmissionCategory = async (id, opts = {}) => {\n    const data = await instance.delete(`/submission-categories/${id}`, opts);\n    return data;\n};\n\nexport const updateSubmissionCategory = async (id, payload, opts = {}) => {\n    const data = await instance.put(\n        `submission-categories/${id}`,\n        payload,\n        opts\n    );\n    return data;\n};\n\nexport const getSpesificSubmissionCategory = async (opts = {}) => {\n    const data = await instance.get('/get-submission-categories', opts);\n    return data;\n};","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as SubmissionCategoryService from '../../services/submission-category';\n\nconst SubmissionCategory = ({\n    getSubmissionCategory,\n    submissionCategory,\n    storeSubmissionCategory,\n    deleteSubmissionCategory,\n    updateSubmissionCategory\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        submissionCategory: null,\n        submissionType: null,\n        maximumSubmission: 0\n    });\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataCategorySubmission, setDataCategorySubmission] = React.useState(\n        []\n    );\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataCategorySubmission(submissionCategory);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '10%'\n            },\n            {\n                name: 'Category Name',\n                selector: 'submissionCategory'\n            },\n            {\n                name: 'Type Category',\n                selector: 'submissionType'\n            },\n            {\n                name: 'Maximum Submission',\n                selector: 'maximumSubmission'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleShow(index, row)}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i>\n{' '}\n                        <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [submissionCategory]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: search\n            }\n        };\n        setLoading(!loading);\n        SubmissionCategoryService.getSubmissionCategory(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getSubmissionCategory(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (id, index) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            // eslint-disable-line no-alert\n            setLoading(!loading);\n            SubmissionCategoryService.deleteSubmissionCategory(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteSubmissionCategory(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Submission Category Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, ...newData} = data;\n            setPayload({...newData});\n        } else {\n            clearInput();\n        }\n    };\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            submissionCategory: null,\n            submissionType: null,\n            maximumSubmission: 0\n        });\n    };\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            const payloadData = {\n                submissionCategory: payload.submissionCategory,\n                submissionType: payload.submissionType,\n                maximumSubmission: payload.maximumSubmission\n            };\n            SubmissionCategoryService.storeSubmissionCategory(payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        storeSubmissionCategory(data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Submission Category Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            const payloadData = {\n                submissionCategory: payload.submissionCategory,\n                submissionType: payload.submissionType,\n                maximumSubmission: payload.maximumSubmission\n            };\n            SubmissionCategoryService.updateSubmissionCategory(\n                payload.id,\n                payloadData\n            )\n                .then((data) => {\n                    setTimeout(() => {\n                        updateSubmissionCategory(tabIndex, data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Submission Category Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1\n                                ? 'Create Kategori Submission'\n                                : 'Edit Kategori Submission'}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Category Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Category Name\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.submissionCategory}\n                                    placeholder=\"Category Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            submissionCategory: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"submissionType\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Submission Type\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <select\n                                    className=\"form-control\"\n                                    defaultValue={payload.submissionType}\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            submissionType: e.target.value\n                                        });\n                                    }}\n                                >\n                                    <option value=\"\">\n                                        -Please choose a type submission-\n                                    </option>\n                                    <option value=\"PEMASUKAN\">Pemasukan</option>\n                                    <option value=\"PENGELUARAN\">\n                                        Pengeluaran\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"submissionType\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Maximum Submission\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.maximumSubmission}\n                                    placeholder=\"Category Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            maximumSubmission: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Kategori Submission</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Kategori Submission\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Category\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Kategori Submission\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataCategorySubmission}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    submissionCategory: state.submissionCategory.submissionCategory,\n    detailSubmissionCategory: state.submissionCategory.detailSubmissionCategory\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getSubmissionCategory: (submissionCategory) =>\n        dispatch({\n            type: ActionTypes.LOAD_SUBMISSION_CATEGORY,\n            submissionCategory\n        }),\n    storeSubmissionCategory: (detailSubmissionCategory) =>\n        dispatch({\n            type: ActionTypes.STORE_SUBMISSION_CATEGORY,\n            detailSubmissionCategory\n        }),\n    deleteSubmissionCategory: (indexSubmissionCategory) =>\n        dispatch({\n            type: ActionTypes.DELETE_SUBMISSION_CATEGORY,\n            index: indexSubmissionCategory\n        }),\n    updateSubmissionCategory: (\n        indexSubmissionCategory,\n        detailSubmissionCategory\n    ) =>\n        dispatch({\n            type: ActionTypes.UPDATE_SUBMISSION_CATEGORY,\n            detailSubmissionCategory,\n            index: indexSubmissionCategory\n        })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubmissionCategory);\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as ProductSubmissionCategoryService from '../../services/product-category';\n\nconst ProductCategory = ({\n    getProductCategory,\n    productCategory,\n    storeProductCategory,\n    deleteProductCategory,\n    updateProductCategory\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        productCategory: null\n    });\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataProductCategory, setDataProductCategory] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataProductCategory(productCategory);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Category Name',\n                selector: 'productCategory',\n                width: '70%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleShow(index, row)}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i>\n{' '}\n                        <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [productCategory]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: search\n            }\n        };\n        setLoading(!loading);\n        ProductSubmissionCategoryService.getProductCategory(opts).then(\n            (data) => {\n                setTimeout(() => {\n                    setLoading(false);\n                    getProductCategory(data.data.data.rows);\n                    setTotalRow(data.data.data.totalItems);\n                }, 1000);\n            }\n        );\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (id, index) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            // eslint-disable-line no-alert\n            setLoading(!loading);\n            ProductSubmissionCategoryService.deleteProductCategory(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteProductCategory(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Product Category Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, ...newData} = data;\n            setPayload({...newData});\n        } else {\n            clearInput();\n        }\n    };\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            productCategory: null\n        });\n    };\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            const payloadData = {\n                productCategory: payload.productCategory\n            };\n            ProductSubmissionCategoryService.storeProductCategory(payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        storeProductCategory(data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Product Category Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            const payloadData = {\n                productCategory: payload.productCategory\n            };\n            ProductSubmissionCategoryService.updateProductCategory(\n                payload.id,\n                payloadData\n            )\n                .then((data) => {\n                    setTimeout(() => {\n                        updateProductCategory(tabIndex, data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Product Category Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1\n                                ? 'Create Kategori Produk'\n                                : 'Edit Kategori Produk'}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Category Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Category Name\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.productCategory}\n                                    placeholder=\"Category Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            productCategory: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Kategori Produk</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Kategori Produk\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Category\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Kategori Produk\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataProductCategory}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    productCategory: state.productCategory.productCategory,\n    detailProductCategory: state.productCategory.detailProductCategory\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProductCategory: (productCategory) =>\n        dispatch({type: ActionTypes.LOAD_PRODUCT_CATEGORY, productCategory}),\n    storeProductCategory: (detailProductCategory) =>\n        dispatch({\n            type: ActionTypes.STORE_PRODUCT_CATEGORY,\n            detailProductCategory\n        }),\n    deleteProductCategory: (indexProductCategory) =>\n        dispatch({\n            type: ActionTypes.DELETE_PRODUCT_CATEGORY,\n            index: indexProductCategory\n        }),\n    updateProductCategory: (indexProductCategory, detailProductCategory) =>\n        dispatch({\n            type: ActionTypes.UPDATE_PRODUCT_CATEGORY,\n            detailProductCategory,\n            index: indexProductCategory\n        })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCategory);\n","import instance from '../utils/axios';\n\nexport const getSubmission = async (opts = {}) => {\n    const data = await instance.get('/submissions', opts);\n    return data;\n};\n\nexport const storeSubmission = async (payload, opts = {}) => {\n    const data = await instance.post('/submissions', payload, opts);\n    return data;\n};\n\nexport const laporan = async (payload, opts = {}) => {\n    const data = await instance.post('/laporan', payload, opts);\n    return data;\n};\n\nexport const showSubmission = async (id, opts={}) => {\n    const data = await instance.get(`/submissions/${id}`, opts);\n    return data;\n}\n\nexport const storeSubmissionAttachment = async (payload, opts = {}) => {\n    const data = await instance.post('/attachment-submissions', payload, opts);\n    return data;\n};\n\nexport const updateStatus = async (id, payload, opts ={}) => {\n    const data = await instance.put(`/submissions/update-status/${id}`, payload, opts)\n    return data;\n}\n\nexport const update = async (id, payload, opts ={}) => {\n    const data = await instance.put(`/submissions/${id}`, payload, opts)\n    return data;\n}\nexport const deleteSUbmission = async (id, opts = {}) => {\n    const data = await instance.delete(`/submissions/${id}`, opts);\n    return data;\n};\n\nexport const updateFullfilment = async (id, payload, opts ={}) => {\n    const data = await instance.put(`/submissions/update-fullfilment/${id}`, payload, opts)\n    return data;\n}\n\n\n","import React, {useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {OverlayTrigger, Badge, Tooltip, Row, Col, Button, Table, Tabs, Tab, InputGroup, Form} from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport { formatCurrency } from \"@app/utils/number\";\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as SubmissionService from '../../../services/submission';\nimport Modal from '../../../components/Modal'\n\nconst Submissions = ({\n    getSubmission,\n    submissions,\n    updateStatus,\n    detailSubmission,\n    deleteSubmission,\n    updateFullfilment\n}) => {\n    const [t] = useTranslation();\n    const history = useHistory();\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataSubmissions, setDataSubmissions] = React.useState([]);\n    const [detail, setDetail] = React.useState({});\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n    const [user, setUser] = React.useState(JSON.parse(localStorage.getItem('user')));\n    const [payloadFullfilment, setPayloadFullfilment] = React.useState({\n        fullfilment: true,\n        status: ''\n    });\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataSubmissions(submissions);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '5%'\n            },\n            {\n                name: 'Date',\n                selector: (row, index) => (\n                    <u style={{ color:'rgb(17, 78, 96)', cursor: 'pointer' }}\n                        onClick={() => {\n                            history.push(`/pemasukan/invoice/${row.id}`);\n                        }}\n                    >\n                        {dayjs(row.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n                    </u>\n                ),\n            },\n            {\n                name: 'Submisison Name',\n                selector: 'submissionName',\n            },\n            {\n                name: 'Amount',\n                selector: (row, index) => convertCurrency(parseFloat(row.amount)),\n            },\n            {\n                name: 'Submission Category',\n                selector: 'submission_category.submissionCategory',\n            },\n            {\n                name: 'Status',\n                selector: (row, index) => statusSubmission(row.status),\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        {((row.status === 'PENDING' && user.role === 'admin')) ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleApporoveStatus(index, row)}\n                            className=\"fa fa-check fa-lg text-success\"\n                        ></i>  : ''}\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((row.status === 'PENDING') && user.role === 'admin') ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleRejectStatus(index, row)}\n                            className=\"fa fa-times fa-lg text-danger\"\n                        ></i> : ''}\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((['PENDING', 'APPROVED', 'PAID', 'PARTIAL PAID'].includes(row.status))) ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => {\n                                history.push(`/pemasukan/edit/${row.id}`);\n                            }}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i> : ''}\n                        \n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((row.status === 'PENDING')) ? <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(index, row.id)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i> : ''}\n\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((['APPROVED', 'PAID', 'PARTIAL PAID', 'COMPLETE'].includes(row.status) )) ? <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            // onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-print fa-lg text-secondary\"\n                            // style={{color: '#d9534f'}}\n                        >\n                        </i> : ''}\n                        \n                        \n                    </div>\n                )\n            },\n            {\n                name: '',\n                width: '10%',\n                selector: (row, index) => (\n                    row.fullfilment === null ? <div onClick={() => handleShow(index, row)} style={{ cursor:'pointer' }} \n                        // onClick={() => this.setState({ modalFulfilment: true, dataDelete: row, tabIndex: index })}\n                    >\n                        {\n                            <OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"tooltip-disabled\">On Going</Tooltip>}>\n                                <span className=\"d-inline-block\">\n                                    <Badge variant=\"warning\">&emsp;</Badge>\n                                </span>\n                            </OverlayTrigger> \n                        }    \n                    </div> : <div>\n                                <OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"tooltip-disabled\">{row.fullfilment ? 'Fulfilled' : 'Unfulfilled'}</Tooltip>}>\n                                    <span className=\"d-inline-block\">\n                                        <Badge variant={row.fullfilment ? 'success' : 'danger'}>&emsp;</Badge>\n                                    </span>\n                                </OverlayTrigger>\n                            </div>\n                ),\n            }\n        ]);\n    }, [submissions]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: 'PEMASUKAN'\n            }\n        };\n        setLoading(!loading);\n        SubmissionService.getSubmission(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getSubmission(data.data.data.rows)\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (index, id) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            setLoading(!loading);\n            SubmissionService.deleteSUbmission(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteSubmission(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Submission Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index)\n        setDetail(data)\n        console.log(data)\n    };\n\n    const handleFullfilment = () => {\n        const payload = {\n            fullfilment: payloadFullfilment.fullfilment,\n            status: payloadFullfilment.fullfilment === true ? detail.status : payloadFullfilment.status\n        }\n        setLoading(!loading);\n        SubmissionService.updateFullfilment(detail.id, payload).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateFullfilment(tabIndex, data.data)\n                setShow(false)\n                toast.success('Fullfilment Successfully')\n            }, 1000);\n        }).catch((error) => {\n            setLoading(false);\n        });\n    }\n\n    const statusSubmission = (data) => {\n        if(data === 'PAID'){\n            return (\n                <Badge variant=\"success\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PARTIAL PAID'){\n            return (\n                <Badge style={{ backgroundColor: '#BDBDBD', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'COMPLETE'){\n            return (\n                <Badge variant=\"success\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'APPROVED'){\n            return (\n                <Badge style={{ backgroundColor: 'blue', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'REFUND'){\n            return (\n                <Badge variant=\"danger\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'CANCELLED'){\n            return (\n                <Badge variant=\"dark\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'FAILED'){\n            return (\n                <Badge variant=\"dark\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PENDING'){\n            return (\n                <Badge variant=\"warning\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PARTIAL APPROVED'){\n            return (\n                <Badge style={{ backgroundColor: '#BDBDBD', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }\n    }\n\n    const handleApporoveStatus = (index, dataStatus) => {\n        const payloadStatus = {\n            status: 'APPROVED'\n        }\n        setLoading(!loading);\n        SubmissionService.updateStatus(dataStatus.id, payloadStatus).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateStatus(index, data.data)\n                toast.success('Approved Successfully')\n            }, 1000);\n        });\n    }\n\n    const handleRejectStatus = (index, dataStatus) => {\n        const payloadStatus = {\n            status: 'FAILED'\n        }\n        setLoading(!loading);\n        SubmissionService.updateStatus(dataStatus.id, payloadStatus).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateStatus(index, data.data)\n                toast.success('Submission Rejected')\n            }, 1000);\n        });\n    }\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Fullfilment */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Fullfilment\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleFullfilment}\n                body={(\n                    <div className=\"m-5\">\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Col sm=\"12\" style={{ marginTop:'6px' }}>\n                                <Form.Label>Select Fullfilment</Form.Label>\n                                <Form.Control as=\"select\" \n                                    defaultValue={payloadFullfilment.fullfilment} \n                                    onChange={(e) => setPayloadFullfilment({\n                                        ...payloadFullfilment,\n                                        fullfilment: e.target.value,\n                                        status: e.target.value === 'true' ? detail.status : 'CANCELLED'\n                                    })}\n                                >\n                                    <option value={true}>Fullfilment</option>\n                                    <option value={false}>Unfullfilment</option>\n                                </Form.Control>\n                            </Col>\n\n                            {payloadFullfilment.fullfilment === 'false' && \n                                <Col sm=\"12\" style={{ marginTop:'6px' }}>\n                                <Form.Label>Select Status</Form.Label>\n                                <Form.Control as=\"select\" \n                                    defaultValue={payloadFullfilment.status} \n                                    onChange={(e) => setPayloadFullfilment({\n                                        ...payloadFullfilment,\n                                        status: e.target.value\n                                    })}\n                                >\n                                    <option value=\"CANCELLED\">CANCELLED</option>\n                                    <option value=\"REFUND\">REFUND</option>\n                                </Form.Control>\n                                </Col>\n                            }\n                        </Form.Group>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Income</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Income\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Income\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <Link to=\"/pemasukan/create\" className=\"float-right btn btn-success btn-sm\">Create Income</Link>\n                                            {/* <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Wallet\n                                            </button> */}\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataSubmissions}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    submissions: state.submissions.submissions,\n    detailSubmission: state.submissions.detailSubmission\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getSubmission: (submissions) =>\n        dispatch({\n            type: ActionTypes.LOAD_SUBMISSIONS,\n            submissions\n        }),\n    updateStatus: (index, detailSubmission) =>\n        dispatch({type: ActionTypes.UPDATE_STATUS, detailSubmission, index}),\n    updateFullfilment: (index, detailSubmission) =>\n        dispatch({type: ActionTypes.UPDATE_FULLFILMENT, detailSubmission, index}),\n    deleteSubmission: (index) =>\n        dispatch({type: ActionTypes.DELETE_SUBMISSION, index})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submissions);\n","import instance from '../utils/axios';\n\nexport const getTransactions = async (opts = {}) => {\n    const data = await instance.get('/transactions', opts);\n    return data;\n};\n\nexport const storeTransaction = async (payload, opts = {}) => {\n    const data = await instance.post('/transactions', payload, opts);\n    return data;\n};\n\n// export const showSubmission = async (id, opts={}) => {\n//     const data = await instance.get(`/submissions/${id}`, opts);\n//     return data;\n// }","import instance from '../utils/axios';\n\nexport const getWallet = async (opts = {}) => {\n    const data = await instance.get('/wallets', opts);\n    return data;\n};\n\nexport const storeWallet = async (payload, opts = {}) => {\n    const data = await instance.post('/wallets', payload, opts);\n    return data;\n};\n\nexport const deleteWallet = async (id, opts = {}) => {\n    const data = await instance.delete(`/wallets/${id}`, opts);\n    return data;\n};\n\nexport const updateWallet = async (id, payload, opts = {}) => {\n    const data = await instance.put(`wallets/${id}`, payload, opts);\n    return data;\n};\n","import React, {useEffect} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Button, Table, Tabs, Tab, InputGroup, Form} from 'react-bootstrap';\nimport { formatCurrency } from \"@app/utils/number\";\nimport dayjs from 'dayjs';\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as SubmissionService from '../../../services/submission';\nimport {storeTransaction} from '../../../services/transactions'\nimport {getWallet} from '../../../services/wallet'\nimport Modal from '../../../components/Modal'\n\nconst Submissions = ({\n    getShow,\n    detailSubmission\n}) => {\n\n    const { id } = useParams();\n    const [loading, setLoading] = React.useState(false)\n    const [show, setShow] = React.useState(false)\n    const [dataSubmission, setDataSubmission] = React.useState({})\n    const [fileAttachment, setFileAttachment] = React.useState(null)\n    const [dataWallet, setDataWallet] = React.useState([])\n    const [payloadPayment, setPayloadPayment] = React.useState({\n        date: null,\n        submissionId: id,\n        walletId: null,\n        amount: 0,\n        attachmentTransaction: null\n    })\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const getData = async () => {\n        setLoading(!loading)\n        await SubmissionService.showSubmission(id, {}).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                getShow(response.data.data)\n                setDataSubmission(response.data.data)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n\n        await getWallet().then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                setDataWallet(response.data.data.rows)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    useEffect(() => {\n        setDataSubmission(detailSubmission)\n    }, [detailSubmission])\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem && dataItem.forEach(element => {\n            total += element.qty * element.sellingPrice;\n        });\n        return total;\n    }\n\n    const calculateTotalPaid = (dataItem) => {\n        let total = 0;\n        dataItem && dataItem.forEach(element => {\n            total += element.amount;\n        });\n        return total;\n    }\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    const handleUploadAttachment = () => {\n        setLoading(!loading)\n        const payload = new FormData();\n        payload.append('submissionId', id)\n        payload.append('attachmentSubmissoin', fileAttachment)\n        SubmissionService.storeSubmissionAttachment(payload).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                toast.success('Attachment Submssion Successfully Upload')\n                getData()\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    const handleAddPayment = () => {\n        setLoading(!loading)\n        const payload = new FormData();\n        payload.append('date', payloadPayment.date)\n        payload.append('walletId', payloadPayment.walletId)\n        payload.append('submissionId', payloadPayment.submissionId)\n        payload.append('amount', payloadPayment.amount)\n        payload.append('attachmentTransaction', payloadPayment.attachmentTransaction)\n        storeTransaction(payload).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                toast.success('Payment added successfully')\n                getData()\n                setShow(false)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Add Payment\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleAddPayment}\n                body={(\n                    <div className=\"m-5\">\n                        <Form>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Payment Date\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                <Form.Control \n                                    type=\"datetime-local\" \n                                    placeholder=\"Payment Date\" \n                                    onChange={(e) => setPayloadPayment({\n                                        ...payloadPayment,\n                                        date: e.target.value\n                                    })}\n                                />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Amount (in IDR)\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Amount (in IDR)\" \n                                    onChange={(e) => setPayloadPayment({\n                                        ...payloadPayment,\n                                        amount: e.target.value\n                                    })}\n                                />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Wallet\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                    <Form.Control \n                                        as=\"select\" \n                                        onChange={(e) => setPayloadPayment({\n                                            ...payloadPayment,\n                                            walletId: e.target.value\n                                        })}\n                                    >\n                                        <option value=\"\">-Choose Wallet From-</option>\n                                        {\n                                            dataWallet && dataWallet.map((data) => (\n                                                <option key={data.id} value={data.id}>{data.walletName}</option>\n                                            ))\n                                        }\n                                    </Form.Control>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Invoice\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                    <InputGroup className=\"mb-2\">\n                                        <InputGroup.Prepend>\n                                        <InputGroup.Text><i className=\"fa fa-paperclip\"></i></InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.File\n                                            onChange={(e) => setPayloadPayment({\n                                                ...payloadPayment,\n                                                attachmentTransaction: e.target.files[0]\n                                            })}\n                                            id=\"custom-file-translate-scss\"\n                                            label=\"no file chosen\"\n                                            lang=\"en\"\n                                            data-browse=\"Chosee File\"\n                                            custom\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>\n                                Invoice #\n                                {id}\n                            </h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Income\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pemasukan\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <div className=\"m-5\">\n                                        <Row className=\"mr-4 ml-4 mt-4\">\n                                            <Col xs={2}>\n                                                Date\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dayjs(dataSubmission.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Due Date\n                                            </Col>\n                                            <Col xs={2}>\n                                                : \n                                                {' '}\n                                                {dayjs(dataSubmission.dueDate).format(\"YYYY-MM-DD HH:mm:ss\")}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mr-4 ml-4 mt-2\">\n                                            <Col xs={2}>\n                                                Transaction Name\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dataSubmission.submissionName}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Customer Name\n                                            </Col>\n                                            <Col xs={2}>\n                                                {/*  */}\n                                            : \n                                            {' '}\n                                            {dataSubmission.customerName}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mr-4 ml-4 mt-2\">\n                                            <Col xs={2}>\n                                            Transaction Type\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dataSubmission.submission_category && dataSubmission.submission_category.submissionType}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Status\n                                            </Col>\n                                            <Col xs={2}>\n                                            : \n                                            {'\\u00A0'}\n                                            <Button variant=\"outline-info\" size=\"sm\" style={{ borderRadius:'20px' }}>\n                                                {dataSubmission.status}\n                                            </Button>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <Row>\n                                        <Col xs={12}>\n                                            <Table size=\"lg\" className=\"mb-5 table-size\" responsive>\n                                                <thead>\n                                                    <tr>\n                                                        <th className=\"pl-5\">No</th>\n                                                        <th>Products</th>\n                                                        <th>Qty</th>\n                                                        <th>Price (IDR)</th>\n                                                        <th>Discount (%)</th>\n                                                        <th>PPN (%)</th>\n                                                        <th>Total Price</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {dataSubmission.items && dataSubmission.items.map((data, index) => (\n                                                        <tr key={index}>\n                                                            <td className=\"pl-5\">{1+index}</td>\n                                                            <td>{data.itemName}</td>\n                                                            <td>{data.qty}</td>\n                                                            <td>\n                                                                {convertCurrency(parseFloat(data.sellingPrice))}\n                                                            </td>\n                                                            <td>\n                                                                {data.discount}\n                                                                %\n                                                            </td>\n                                                            <td>\n                                                                {data.tax}\n                                                                %\n                                                            </td>\n                                                            <td>\n                                                                {convertCurrency(parseFloat(data.sellingPrice) * parseFloat(data.qty))}\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                                <tfoot>\n                                                    <tr>\n                                                        <td colSpan=\"5\"></td>\n                                                        <th>PAY</th>\n                                                        <th>\n                                                        \n                                                        {convertCurrency(calculateTotalPaid(dataSubmission.transactions))}\n                                                        </th>\n                                                    </tr>\n                                                    <tr>\n                                                        <td colSpan=\"5\"></td>\n                                                        <th>TOTAL</th>\n                                                        <th>\n                                                            {convertCurrency(calculateTotal(dataSubmission.items))}\n                                                        </th>\n                                                    </tr>\n                                                </tfoot>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"mr-5 pr-5\">\n                                    {dataSubmission.status !== 'PAID' &&  dataSubmission.status !== 'COMPLETE' &&\n                                        <Col xs={12} style={{ textAlign:'end' }}>\n                                            <Button \n                                                variant=\"success\" \n                                                style={{ width:'170px' }} \n                                                onClick={() => setShow(true)}\n                                            >\n                                                ADD PAYMENT\n                                            </Button>\n                                        </Col> \n                                    }\n                                    {dataSubmission.status === 'PAID' &&\n                                        <Col xs={12} style={{ textAlign:'end' }}>\n                                            <Button variant=\"success\" style={{ width:'150px' }} \n                                                // onClick={() => this.setState({ modalPayment: true })}\n                                            >\n                                                    Invoice Selesai\n                                            </Button>\n                                        </Col>\n                                    } \n                                    </Row>\n                                    <Row>\n                                        <Col xs={12}>\n                                            <Tabs defaultActiveKey=\"attachment\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                                                {/* <Tab eventKey=\"notes\" title=\"Notes\" className=\"p-3\">\n                                                    <h1>Notes</h1>\n                                                </Tab> */}\n                                                <Tab eventKey=\"attachment\" title=\"Attachment\" className=\"p-3\">\n                                                    <Table size=\"lg\" className=\"table-size\" responsive>\n                                                        <thead>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>File Name</th>\n                                                                <th>Uploaded At</th>\n                                                                <th>Uploaded By</th>\n                                                                <th>Action</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            { dataSubmission.submission_attachments && dataSubmission.submission_attachments.map((data , index) => (\n                                                                <tr>\n                                                                    <td>{1+index}</td>\n                                                                    <td>{data.attachmentSubmissoin}</td>\n                                                                    <td>{dayjs(data.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                                                                    <td>{data.user.fullName}</td>\n                                                                    <td>\n                                                                        {data.attachmentSubmissoin ? <a href={`${process.env.REACT_APP_URL_ATTACHMENT_SUBMISSIONS+data.attachmentSubmissoin}`} target=\"_blank\"><span style={{ color:'#0DAA66' }}>View</span></a> : '-' }\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </Table>\n                                                    <Row className=\"pt-5 pb-2\">\n                                                        <Col xs={12}>\n                                                            <InputGroup className=\"mb-2\">\n                                                                <InputGroup.Prepend>\n                                                                <InputGroup.Text><i className=\"fa fa-paperclip\"></i></InputGroup.Text>\n                                                                </InputGroup.Prepend>\n                                                                <Form.File \n                                                                    id=\"custom-file-translate-scss\"\n                                                                    label=\"no file chosen\"\n                                                                    capture=\"environment\"\n                                                                    lang=\"en\"\n                                                                    data-browse=\"Chosee File\"\n                                                                    custom\n                                                                    onChange={(e)=> setFileAttachment(e.target.files[0])}\n                                                                />\n                                                            </InputGroup>\n                                                        </Col>\n                                                    </Row>\n                                                    <Button \n                                                        onClick={() => handleUploadAttachment()} \n                                                        variant=\"success\" style={{ float:'right', width:'100px' }} \n                                                        className=\"mt-3\"\n                                                    >\n                                                        UPLOAD\n                                                    </Button>\n                                                </Tab>\n                                                <Tab eventKey=\"paymentRecord\" title=\"Payment Record\" className=\"p-3\">\n                                                    <Table size=\"lg\" className=\"table-size\" responsive>\n                                                        <thead>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>Date</th>\n                                                                <th>Amount</th>\n                                                                <th>Payment Method</th>\n                                                                <th>Attachment</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {dataSubmission.transactions && dataSubmission.transactions.map((data , index) => (\n                                                                <tr>\n                                                                    <td>{1+index}</td>\n                                                                    <td>{dayjs(data.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                                                                    <td>{convertCurrency(parseFloat(data.amount))}</td>\n                                                                    <td>{data.wallet.walletName}</td>\n                                                                    <td>\n                                                                        {data.attachmentTransaction ? <a href={`${process.env.REACT_APP_URL_ATTACHMENT_TRANSACTION+data.attachmentTransaction}`} target=\"_blank\"><span style={{ color:'#0DAA66' }}>View</span></a> : '-' }\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </Table>\n                                                </Tab>\n                                            </Tabs>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    detailSubmission: state.submissions.detailSubmission\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getShow: (detailSubmission) =>\n        dispatch({\n            type: ActionTypes.SHOW_SUBMISSIONS,\n            detailSubmission\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submissions);\n","import React, {useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Form, Table, Button, Modal} from 'react-bootstrap';\nimport CounterInput from 'react-counter-input'\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as ItemService from '../../../services/items';\nimport {getSpesificSubmissionCategory} from '../../../services/submission-category';\nimport {storeSubmission} from '../../../services/submission'\n\n\nconst Create = ({getItems, items}) => {\n\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [cart, setCart] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(5);\n    const [dataItems, setDataItems] = React.useState([])\n    const [dataCategory, setDataCategory] = React.useState([])\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [columns, setColumn] = React.useState([]);\n    const [payloadCustomItem, setPayloadCustomItem] = React.useState({\n        itemName: null,\n        sellingPrice: null,\n    })\n    const [payload, setPayload] = React.useState({\n        submissionName: null,\n        date: null,\n        dueDate: null,\n        customerName: null,\n        categoryId: null,\n        status: \"PENDING\",\n    })\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        await ItemService.getItems(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getItems(data.data.data.rows);\n                setDataItems(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n\n        const optsCategory = {\n            params: {\n                q: 'PEMASUKAN'\n            }\n        }\n\n        await getSpesificSubmissionCategory(optsCategory).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                setDataCategory(data.data.data)\n            }, 1000);\n        })\n    };\n\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const addProductToCart = (rows) => {\n        if(cart.find((datas) => datas.itemName === rows.itemName)){\n            const indexs = cart.findIndex((datass) => datass.itemName === rows.itemName)\n            const itemss = [...cart];\n            const item = {...cart[indexs]};\n            item.qty += 1\n            item.total = item.qty * item.sellingPrice\n            itemss[indexs] = item;\n            setCart(itemss)\n        }else{\n            const keranjang = [...cart]\n            rows.qty = 1\n            rows.discount = 0\n            rows.tax = 0\n            rows.total = parseFloat(rows.sellingPrice)\n            keranjang.splice(cart.length, 0, rows);\n            setCart(keranjang)\n        }\n        toast.success('Items Added !')\n    }\n\n    const deleteCart = (index) => {\n        const dataDelete = [...cart]\n        dataDelete.splice(index, 1)\n        setCart(dataDelete)\n    }\n    \n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Item Name',\n                selector: 'itemName',\n                width: '35%'\n            },\n            {\n                name: 'Selling Price',\n                selector: 'sellingPrice',\n                width: '35%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Add Data\"\n                            onClick={() => addProductToCart(row)}\n                            className=\"fa fa-plus fa-lg text-success\"\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [cart, items]);\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem.forEach(element => {\n            total += element.total;\n        });\n        return total;\n    }\n\n    const addCustomItem = () => {\n        if (dataItems.find((data) => data.itemName === payloadCustomItem.itemName)) {\n            toast.error('item names cannot be the same')\n        } else {\n            if (payloadCustomItem.itemName === null || payloadCustomItem.sellingPrice === null) {\n                toast.error('data cannot be empty')\n            } else {\n                const d = [...dataItems]\n                const data = {\n                    itemName: payloadCustomItem.itemName,\n                    buyingPrice: 0,\n                    sellingPrice: parseFloat(payloadCustomItem.sellingPrice),\n                    productId: 0,\n                }\n                d.splice(size -1, 1)\n                d.splice(0, 0, data)\n                setDataItems(d)\n                setTotalRow(totalRow + 1)\n                setPayloadCustomItem({\n                    ...payloadCustomItem,\n                    itemName: null,\n                    sellingPrice: null\n                })\n            }\n        }\n    }\n\n    const checkOut = async () => {\n        setLoading(!loading)\n        const newPayload = {\n            submissionName: payload.submissionName,\n            date: payload.date,\n            dueDate: payload.dueDate,\n            customerName: payload.customerName,\n            categoryId: payload.categoryId,\n            status: payload.status,\n            items: cart\n        }\n        await storeSubmission(newPayload).then((response) => {\n            setTimeout(() => {\n                setLoading(false);\n                history.push('/pemasukan');\n                toast.success('Submissions Created!');\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        });\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Add Product */}\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>Product</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <DataTable\n                        title=\"Arnold Movies\"\n                        columns={columns}\n                        data={dataItems}\n                        noHeader\n                        highlightOnHover\n                        paginationTotalRows={totalRow}\n                        paginationPerPage={size}\n                        pagination\n                        paginationServer\n                        onChangePage={handlePageChange}\n                        onChangeRowsPerPage={handlePerRowsChange}\n                    />\n                    <Row className=\"position-relative show-grid\">\n                        <Col xs={12}>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"12\">\n                                    Custom Item\n                                </Form.Label>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Item Name\" \n                                        defaultValue={payloadCustomItem.itemName} \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                itemName: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"number\" min={0} \n                                        defaultValue={payloadCustomItem.sellingPrice} \n                                        placeholder=\"Selling Price\" \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                sellingPrice: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"2\">\n                                    <Button \n                                        variant=\"success\" style={{ width: '100%' }} size=\"sm\" \n                                        onClick={() => addCustomItem()}\n                                    >\n                                        <i className=\"fa fa-plus\"></i> \n                                        {' '}\n                                        Add\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>Selesai</Button>\n                </Modal.Footer>\n            </Modal>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Create Income</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Create Income\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-12\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pemasukan\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <Form className=\"m-5\">\n                                        <Row>\n                                            <Col xs={6}>\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    date: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                    Set Due Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    dueDate: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Transaction Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Transaction Name\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    submissionName: e.target.value\n                                                                });\n                                                            }}\n                                                            />\n                                                    </Col>\n                                                </Form.Group>\n\n                                            </Col>\n                                            <Col xs={6}>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                    Customer Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Customer Name\" \n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                customerName: e.target.value\n                                                            });\n                                                        }}\n                                                        />\n                                                    </Col>\n                                                    \n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Submission Category\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                    <Form.Control as=\"select\" \n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                categoryId: e.target.value\n                                                            });\n                                                        }}\n                                                    >\n                                                        <option value=\"\">- Choose Submission Category -</option>\n                                                        {\n                                                            dataCategory && dataCategory.map((data) => (\n                                                                <option key={data.id} value={data.id}>{data.submissionCategory}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12\">\n                                            <Table responsive=\"sm\">\n                                                <thead>\n                                                <tr>\n                                                    <th>No</th>\n                                                    <th>Product</th>\n                                                    <th>Qty</th>\n                                                    <th>Price (IDR)</th>\n                                                    <th>Discount</th>\n                                                    <th>PPN (%)</th>\n                                                    <th>Total (IDR)</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                    { cart.map((r, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index+1}</td>\n                                                            <td>{r.itemName}</td>\n                                                            <td>\n                                                            <CounterInput\n                                                                count={r.qty}\n                                                                min={1}\n                                                                onCountChange={(count) => {\n                                                                    const changeItems = [...cart];\n                                                                    const item = {...changeItems[index]};\n                                                                    item.qty = count\n                                                                    const totalHarga = count * item.sellingPrice\n                                                                    const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                    changeItems[index] = item;\n                                                                    setCart(changeItems)\n                                                                }}\n                                                            /> \n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Price\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.sellingPrice)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.sellingPrice = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                        \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Discount\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.discount)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.discount = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"PPN\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.tax)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.tax = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>{r.total}</td>\n                                                            <td>\n                                                                <i \n                                                                    className=\"fa fa-trash\" \n                                                                    style={{ color:'red' }}\n                                                                    onClick={() => deleteCart(index)}\n                                                                >\n                                                                </i>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12 text-right\">\n                                            <Button variant=\"outline-success\" onClick={handleShow}>\n                                                <i className=\"fa fa-plus\"></i> \n                                                {' '}\n                                                Add Products\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {calculateTotal(cart)}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={12}>\n                                            <Button variant=\"secondary\">Cancel</Button> \n                                            {' '} \n                                            <Button variant=\"success\" onClick={() => checkOut()}> Submit</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItems: (items) =>\n        dispatch({\n            type: ActionTypes.GET_ITEMS,\n            items\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\n","import React, {useEffect} from 'react';\nimport {Link, useHistory, useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Form, Table, Button, Modal} from 'react-bootstrap';\nimport CounterInput from 'react-counter-input'\nimport dayjs from 'dayjs';\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as ItemService from '../../../services/items';\nimport {getSpesificSubmissionCategory} from '../../../services/submission-category';\nimport * as SubmissionService from '../../../services/submission';\n\n\nconst Edit = ({getItems, items}) => {\n\n    const { id } = useParams();\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [cart, setCart] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(5);\n    const [dataItems, setDataItems] = React.useState([])\n    const [dataCategory, setDataCategory] = React.useState([])\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [columns, setColumn] = React.useState([]);\n    const [totalBefore, setTotalBefore] = React.useState(0)\n    const [payloadCustomItem, setPayloadCustomItem] = React.useState({\n        itemName: null,\n        sellingPrice: null,\n    })\n    const [payload, setPayload] = React.useState({\n        submissionName: null,\n        date: '',\n        dueDate: '',\n        customerName: null,\n        categoryId: \"\",\n        status: \"\",\n    })\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        await ItemService.getItems(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getItems(data.data.data.rows);\n                setDataItems(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n\n        const optsCategory = {\n            params: {\n                q: 'PEMASUKAN'\n            }\n        }\n\n        await getSpesificSubmissionCategory(optsCategory).then((data) => {\n            setDataCategory(data.data.data)\n        })\n\n        await SubmissionService.showSubmission(id).then((data) => {\n            setTimeout(() => {\n                let totBefore = 0;\n                data.data.data.items.forEach((element) => {\n                    const totalHarga =  element.qty * element.sellingPrice;\n                    const totalHargaDiscount = totalHarga - ((totalHarga * element.discount)/100)\n                    element.total = totalHargaDiscount + ((totalHargaDiscount * element.tax)/100)\n                    element.submissionId = id\n                    totBefore += element.total\n                })\n                setTotalBefore(totBefore)\n                setCart(data.data.data.items)\n                setPayload({\n                    ...payload,\n                    submissionName: data.data.data.submissionName,\n                    dueDate: dayjs(data.data.data.dueDate).format('YYYY-MM-DDTHH:mm'),\n                    date: dayjs(data.data.data.date).format('YYYY-MM-DDTHH:mm'),\n                    categoryId: data.data.data.categoryId,\n                    customerName: data.data.data.customerName,\n                    status: data.data.data.status\n                })\n            }, 1000);\n        })\n    };\n\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const addProductToCart = (rows) => {\n        if(cart.find((datas) => datas.itemName === rows.itemName)){\n            const indexs = cart.findIndex((datass) => datass.itemName === rows.itemName)\n            const itemss = [...cart];\n            const item = {...cart[indexs]};\n            item.submissionId = id\n            item.qty += 1\n            item.total = item.qty * item.sellingPrice\n            itemss[indexs] = item;\n            setCart(itemss)\n        }else{\n            const keranjang = [...cart]\n            rows.qty = 1\n            rows.discount = 0\n            rows.tax = 0\n            rows.submissionId = id\n            rows.total = parseFloat(rows.sellingPrice)\n            keranjang.splice(cart.length, 0, rows);\n            setCart(keranjang)\n        }\n        toast.success('Items Added !')\n    }\n\n    const deleteCart = (index) => {\n        const dataDelete = [...cart]\n        dataDelete.splice(index, 1)\n        setCart(dataDelete)\n    }\n    \n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Item Name',\n                selector: 'itemName',\n                width: '35%'\n            },\n            {\n                name: 'Selling Price',\n                selector: 'sellingPrice',\n                width: '35%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Add Data\"\n                            onClick={() => addProductToCart(row)}\n                            className=\"fa fa-plus fa-lg text-success\"\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [cart, items]);\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem.forEach(element => {\n            total += element.total;\n        });\n        return total;\n    }\n\n    const addCustomItem = () => {\n        if (dataItems.find((data) => data.itemName === payloadCustomItem.itemName)) {\n            toast.error('item names cannot be the same')\n        } else {\n            if (payloadCustomItem.itemName === null || payloadCustomItem.sellingPrice === null) {\n                toast.error('data cannot be empty')\n            } else {\n                const d = [...dataItems]\n                const data = {\n                    itemName: payloadCustomItem.itemName,\n                    buyingPrice: 0,\n                    sellingPrice: parseFloat(payloadCustomItem.sellingPrice),\n                    productId: 0,\n                }\n                d.splice(size -1, 1)\n                d.splice(0, 0, data)\n                setDataItems(d)\n                setTotalRow(totalRow + 1)\n                setPayloadCustomItem({\n                    ...payloadCustomItem,\n                    itemName: null,\n                    sellingPrice: null\n                })\n            }\n        }\n    }\n\n    const checkOut = async () => {\n        setLoading(!loading)\n        const newPayload = {\n            submissionName: payload.submissionName,\n            date: payload.date,\n            dueDate: payload.dueDate,\n            customerName: payload.customerName,\n            categoryId: payload.categoryId,\n            status: payload.status,\n            items: cart\n        }\n        await SubmissionService.update(id, newPayload).then((response) => {\n            setTimeout(() => {\n                setLoading(false);\n                history.push('/pemasukan');\n                toast.success('Submissions Updated!');\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        });\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Add Product */}\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>Product</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <DataTable\n                        title=\"Arnold Movies\"\n                        columns={columns}\n                        data={dataItems}\n                        noHeader\n                        highlightOnHover\n                        paginationTotalRows={totalRow}\n                        paginationPerPage={size}\n                        pagination\n                        paginationServer\n                        onChangePage={handlePageChange}\n                        onChangeRowsPerPage={handlePerRowsChange}\n                    />\n                    <Row className=\"position-relative show-grid\">\n                        <Col xs={12}>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"12\">\n                                    Custom Item\n                                </Form.Label>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Item Name\" \n                                        defaultValue={payloadCustomItem.itemName} \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                itemName: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"number\" min={0} \n                                        defaultValue={payloadCustomItem.sellingPrice} \n                                        placeholder=\"Selling Price\" \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                sellingPrice: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"2\">\n                                    <Button \n                                        variant=\"success\" style={{ width: '100%' }} size=\"sm\" \n                                        onClick={() => addCustomItem()}\n                                    >\n                                        <i className=\"fa fa-plus\"></i> \n                                        {' '}\n                                        Add\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>Selesai</Button>\n                </Modal.Footer>\n            </Modal>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Edit Income</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Edit Income\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-12\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pemasukan\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <Form className=\"m-5\">\n                                        <Row>\n                                            <Col xs={6}>\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\"\n                                                        defaultValue={payload.date}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    date: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                    Set Due Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control \n                                                            type=\"datetime-local\" \n                                                            value={payload.dueDate}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    dueDate: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Transaction Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Transaction Name\"\n                                                            defaultValue={payload.submissionName}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    submissionName: e.target.value\n                                                                });\n                                                            }}\n                                                            />\n                                                    </Col>\n                                                </Form.Group>\n\n                                            </Col>\n                                            <Col xs={6}>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                    Customer Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Customer Name\" \n                                                        defaultValue={payload.customerName}\n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                customerName: e.target.value\n                                                            });\n                                                        }}\n                                                        />\n                                                    </Col>\n                                                    \n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Submission Category\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                    <Form.Control as=\"select\" \n                                                        value={payload.categoryId}\n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                categoryId: e.target.value\n                                                            });\n                                                        }}\n                                                    >\n                                                        <option value=\"\">- Choose Submission Category -</option>\n                                                        {\n                                                            dataCategory && dataCategory.map((data) => (\n                                                                <option key={data.id} value={data.id}>{data.submissionCategory}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12\">\n                                            <Table responsive=\"sm\">\n                                                <thead>\n                                                <tr>\n                                                    <th>No</th>\n                                                    <th>Product</th>\n                                                    <th>Qty</th>\n                                                    <th>Price (IDR)</th>\n                                                    <th>Discount</th>\n                                                    <th>PPN (%)</th>\n                                                    <th>Total (IDR)</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                    { cart.map((r, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index+1}</td>\n                                                            <td>{r.itemName}</td>\n                                                            <td>\n                                                            <CounterInput\n                                                                count={r.qty}\n                                                                min={1}\n                                                                onCountChange={(count) => {\n                                                                    const changeItems = [...cart];\n                                                                    const item = {...changeItems[index]};\n                                                                    item.qty = count\n                                                                    const totalHarga = count * item.sellingPrice\n                                                                    const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                    changeItems[index] = item;\n                                                                    setCart(changeItems)\n                                                                }}\n                                                            /> \n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Price\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.sellingPrice)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.sellingPrice = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                        \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Discount\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.discount)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.discount = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"PPN\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.tax)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.tax = e.target.value\n                                                                        const totalHarga = item.qty * item.sellingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>{r.total}</td>\n                                                            <td>\n                                                                <i \n                                                                    className=\"fa fa-trash\" \n                                                                    style={{ color:'red' }}\n                                                                    onClick={() => deleteCart(index)}\n                                                                >\n                                                                </i>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12 text-right\">\n                                            <Button variant=\"outline-success\" onClick={handleShow}>\n                                                <i className=\"fa fa-plus\"></i> \n                                                {' '}\n                                                Add Products\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(payload.status === 'APPROVED' || payload.status === 'PARTIAL PAID' || payload.status === 'PAID') &&  <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>THE PREVIOUS TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {totalBefore}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n                                    }\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {calculateTotal(cart)}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={12}>\n                                            <Button variant=\"secondary\">Cancel</Button> \n                                            {' '} \n                                            <Button variant=\"success\" onClick={() => checkOut()}> Submit</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItems: (items) =>\n        dispatch({\n            type: ActionTypes.GET_ITEMS,\n            items\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React, {useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {OverlayTrigger, Badge, Tooltip, Row, Col, Button, Table, Tabs, Tab, InputGroup, Form} from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport { formatCurrency } from \"@app/utils/number\";\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as SubmissionService from '../../../services/submission';\nimport Modal from '../../../components/Modal'\n\nconst Submissions = ({\n    getSubmission,\n    submissions,\n    updateStatus,\n    detailSubmission,\n    deleteSubmission,\n    updateFullfilment\n}) => {\n    const [t] = useTranslation();\n    const history = useHistory();\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataSubmissions, setDataSubmissions] = React.useState([]);\n    const [detail, setDetail] = React.useState({});\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n    const [user, setUser] = React.useState(JSON.parse(localStorage.getItem('user')));\n    const [payloadFullfilment, setPayloadFullfilment] = React.useState({\n        fullfilment: true,\n        status: ''\n    });\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataSubmissions(submissions);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '5%'\n            },\n            {\n                name: 'Date',\n                selector: (row, index) => (\n                    <u style={{ color:'rgb(17, 78, 96)', cursor: 'pointer' }}\n                        onClick={() => {\n                            history.push(`/pengeluaran/purchase-order/${row.id}`);\n                        }}\n                    >\n                        {dayjs(row.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n                    </u>\n                ),\n            },\n            {\n                name: 'Submisison Name',\n                selector: 'submissionName',\n            },\n            {\n                name: 'Amount',\n                selector: (row, index) => convertCurrency(parseFloat(row.amount)),\n            },\n            {\n                name: 'Submission Category',\n                selector: 'submission_category.submissionCategory',\n            },\n            {\n                name: 'Status',\n                selector: (row, index) => statusSubmission(row.status),\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        {((row.status === 'PENDING' && user.role === 'admin') || (row.status === 'PARTIAL APPROVED' && user.role === 'manager')) ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleApporoveStatus(index, row)}\n                            className=\"fa fa-check fa-lg text-success\"\n                        ></i>  : ''}\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((row.status === 'PENDING') && user.role === 'admin') ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleRejectStatus(index, row)}\n                            className=\"fa fa-times fa-lg text-danger\"\n                        ></i> : ''}\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((['PENDING', 'PARTIAL APPROVED', 'APPROVED', 'PAID', 'PARTIAL PAID'].includes(row.status))) ? <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => {\n                                history.push(`/pengeluaran/edit/${row.id}`);\n                            }}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i> : ''}\n                        \n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((row.status === 'PENDING')) ? <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(index, row.id)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i> : ''}\n\n                        {'\\u00A0'}\n                        {'\\u00A0'}\n                        {((['APPROVED', 'PAID', 'PARTIAL PAID', 'COMPLETE'].includes(row.status) )) ? <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            // onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-print fa-lg text-secondary\"\n                            // style={{color: '#d9534f'}}\n                        >\n                        </i> : ''}\n                        \n                        \n                    </div>\n                )\n            },\n            {\n                name: '',\n                width: '10%',\n                selector: (row, index) => (\n                    row.fullfilment === null ? <div onClick={() => handleShow(index, row)} style={{ cursor:'pointer' }} \n                        // onClick={() => this.setState({ modalFulfilment: true, dataDelete: row, tabIndex: index })}\n                    >\n                        {\n                            <OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"tooltip-disabled\">On Going</Tooltip>}>\n                                <span className=\"d-inline-block\">\n                                    <Badge variant=\"warning\">&emsp;</Badge>\n                                </span>\n                            </OverlayTrigger> \n                        }    \n                    </div> : <div>\n                                <OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"tooltip-disabled\">{row.fullfilment ? 'Fulfilled' : 'Unfulfilled'}</Tooltip>}>\n                                    <span className=\"d-inline-block\">\n                                        <Badge variant={row.fullfilment ? 'success' : 'danger'}>&emsp;</Badge>\n                                    </span>\n                                </OverlayTrigger>\n                            </div>\n                ),\n            }\n        ]);\n    }, [submissions]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: 'PENGELUARAN'\n            }\n        };\n        setLoading(!loading);\n        SubmissionService.getSubmission(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getSubmission(data.data.data.rows)\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (index, id) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            setLoading(!loading);\n            SubmissionService.deleteSUbmission(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteSubmission(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Submission Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index)\n        setDetail(data)\n        console.log(data)\n    };\n\n    const handleFullfilment = () => {\n        const payload = {\n            fullfilment: payloadFullfilment.fullfilment,\n            status: payloadFullfilment.fullfilment === true ? detail.status : payloadFullfilment.status\n        }\n        setLoading(!loading);\n        SubmissionService.updateFullfilment(detail.id, payload).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateFullfilment(tabIndex, data.data)\n                setShow(false)\n                toast.success('Fullfilment Successfully')\n            }, 1000);\n        }).catch((error) => {\n            setLoading(false);\n        });\n    }\n\n    const statusSubmission = (data) => {\n        if(data === 'PAID'){\n            return (\n                <Badge variant=\"success\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PARTIAL PAID'){\n            return (\n                <Badge style={{ backgroundColor: '#BDBDBD', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'COMPLETE'){\n            return (\n                <Badge variant=\"success\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'APPROVED'){\n            return (\n                <Badge style={{ backgroundColor: 'blue', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'REFUND'){\n            return (\n                <Badge variant=\"danger\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'CANCELLED'){\n            return (\n                <Badge variant=\"dark\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'FAILED'){\n            return (\n                <Badge variant=\"dark\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PENDING'){\n            return (\n                <Badge variant=\"warning\" style={{ color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }else if(data === 'PARTIAL APPROVED'){\n            return (\n                <Badge style={{ backgroundColor: '#BDBDBD', color:'white', padding:'10px' }}>{ data }</Badge>\n            )\n        }\n    }\n\n    const handleApporoveStatus = (index, dataStatus) => {\n        const payloadStatus = {\n            status: dataStatus.status === 'PENDING' ? 'PARTIAL APPROVED' : 'APPROVED'\n        }\n        setLoading(!loading);\n        SubmissionService.updateStatus(dataStatus.id, payloadStatus).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateStatus(index, data.data)\n                toast.success('Approved Successfully')\n            }, 1000);\n        });\n    }\n\n    const handleRejectStatus = (index, dataStatus) => {\n        const payloadStatus = {\n            status: 'FAILED'\n        }\n        setLoading(!loading);\n        SubmissionService.updateStatus(dataStatus.id, payloadStatus).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                updateStatus(index, data.data)\n                toast.success('Submission Rejected')\n            }, 1000);\n        });\n    }\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Fullfilment */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Fullfilment\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleFullfilment}\n                body={(\n                    <div className=\"m-5\">\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Col sm=\"12\" style={{ marginTop:'6px' }}>\n                                <Form.Label>Select Fullfilment</Form.Label>\n                                <Form.Control as=\"select\" \n                                    defaultValue={payloadFullfilment.fullfilment} \n                                    onChange={(e) => setPayloadFullfilment({\n                                        ...payloadFullfilment,\n                                        fullfilment: e.target.value,\n                                        status: e.target.value === 'true' ? detail.status : 'CANCELLED'\n                                    })}\n                                >\n                                    <option value={true}>Fullfilment</option>\n                                    <option value={false}>Unfullfilment</option>\n                                </Form.Control>\n                            </Col>\n\n                            {payloadFullfilment.fullfilment === 'false' && \n                                <Col sm=\"12\" style={{ marginTop:'6px' }}>\n                                <Form.Label>Select Status</Form.Label>\n                                <Form.Control as=\"select\" \n                                    defaultValue={payloadFullfilment.status} \n                                    onChange={(e) => setPayloadFullfilment({\n                                        ...payloadFullfilment,\n                                        status: e.target.value\n                                    })}\n                                >\n                                    <option value=\"CANCELLED\">CANCELLED</option>\n                                    <option value=\"REFUND\">REFUND</option>\n                                </Form.Control>\n                                </Col>\n                            }\n                        </Form.Group>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Expense</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Expense\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Expense\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <Link to=\"/pengeluaran/create\" className=\"float-right btn btn-success btn-sm\">Create Expense</Link>\n                                            {/* <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Wallet\n                                            </button> */}\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataSubmissions}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    submissions: state.submissions.submissions,\n    detailSubmission: state.submissions.detailSubmission\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getSubmission: (submissions) =>\n        dispatch({\n            type: ActionTypes.LOAD_SUBMISSIONS,\n            submissions\n        }),\n    updateStatus: (index, detailSubmission) =>\n        dispatch({type: ActionTypes.UPDATE_STATUS, detailSubmission, index}),\n    updateFullfilment: (index, detailSubmission) =>\n        dispatch({type: ActionTypes.UPDATE_FULLFILMENT, detailSubmission, index}),\n    deleteSubmission: (index) =>\n        dispatch({type: ActionTypes.DELETE_SUBMISSION, index})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submissions);\n","import React, {useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Form, Table, Button, Modal} from 'react-bootstrap';\nimport CounterInput from 'react-counter-input'\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as ItemService from '../../../services/items';\nimport {getSpesificSubmissionCategory} from '../../../services/submission-category';\nimport {storeSubmission} from '../../../services/submission'\n\n\nconst Create = ({getItems, items}) => {\n\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [cart, setCart] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(5);\n    const [dataItems, setDataItems] = React.useState([])\n    const [dataCategory, setDataCategory] = React.useState([])\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [columns, setColumn] = React.useState([]);\n    const [payloadCustomItem, setPayloadCustomItem] = React.useState({\n        itemName: null,\n        buyingPrice: null,\n    })\n    const [payload, setPayload] = React.useState({\n        submissionName: null,\n        date: null,\n        dueDate: null,\n        customerName: null,\n        categoryId: null,\n        status: \"PENDING\",\n    })\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        await ItemService.getItems(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getItems(data.data.data.rows);\n                setDataItems(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n\n        const optsCategory = {\n            params: {\n                q: 'PENGELUARAN'\n            }\n        }\n\n        await getSpesificSubmissionCategory(optsCategory).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                setDataCategory(data.data.data)\n            }, 1000);\n        })\n    };\n\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const addProductToCart = (rows) => {\n        if(cart.find((datas) => datas.itemName === rows.itemName)){\n            const indexs = cart.findIndex((datass) => datass.itemName === rows.itemName)\n            const itemss = [...cart];\n            const item = {...cart[indexs]};\n            item.qty += 1\n            item.total = item.qty * item.buyingPrice\n            itemss[indexs] = item;\n            setCart(itemss)\n        }else{\n            const keranjang = [...cart]\n            rows.qty = 1\n            rows.discount = 0\n            rows.tax = 0\n            rows.total = parseFloat(rows.buyingPrice)\n            keranjang.splice(cart.length, 0, rows);\n            setCart(keranjang)\n        }\n        toast.success('Items Added !')\n    }\n\n    const deleteCart = (index) => {\n        const dataDelete = [...cart]\n        dataDelete.splice(index, 1)\n        setCart(dataDelete)\n    }\n    \n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Item Name',\n                selector: 'itemName',\n                width: '35%'\n            },\n            {\n                name: 'Buying Price',\n                selector: 'buyingPrice',\n                width: '35%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Add Data\"\n                            onClick={() => addProductToCart(row)}\n                            className=\"fa fa-plus fa-lg text-success\"\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [cart, items]);\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem.forEach(element => {\n            total += element.total;\n        });\n        return total;\n    }\n\n    const addCustomItem = () => {\n        if (dataItems.find((data) => data.itemName === payloadCustomItem.itemName)) {\n            toast.error('item names cannot be the same')\n        } else {\n            if (payloadCustomItem.itemName === null || payloadCustomItem.buyingPrice === null) {\n                toast.error('data cannot be empty')\n            } else {\n                const d = [...dataItems]\n                const data = {\n                    itemName: payloadCustomItem.itemName,\n                    sellingPrice: 0,\n                    buyingPrice: parseFloat(payloadCustomItem.buyingPrice),\n                    productId: 0,\n                }\n                d.splice(size -1, 1)\n                d.splice(0, 0, data)\n                setDataItems(d)\n                setTotalRow(totalRow + 1)\n                setPayloadCustomItem({\n                    ...payloadCustomItem,\n                    itemName: null,\n                    buyingPrice: null\n                })\n            }\n        }\n    }\n\n    const checkOut = async () => {\n        setLoading(!loading)\n        const newPayload = {\n            submissionName: payload.submissionName,\n            date: payload.date,\n            dueDate: payload.dueDate,\n            customerName: payload.customerName,\n            categoryId: payload.categoryId,\n            status: payload.status,\n            items: cart\n        }\n        await storeSubmission(newPayload).then((response) => {\n            setTimeout(() => {\n                setLoading(false);\n                history.push('/pengeluaran');\n                toast.success('Submissions Created!');\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        });\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Add Product */}\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>Product</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <DataTable\n                        title=\"Arnold Movies\"\n                        columns={columns}\n                        data={dataItems}\n                        noHeader\n                        highlightOnHover\n                        paginationTotalRows={totalRow}\n                        paginationPerPage={size}\n                        pagination\n                        paginationServer\n                        onChangePage={handlePageChange}\n                        onChangeRowsPerPage={handlePerRowsChange}\n                    />\n                    <Row className=\"position-relative show-grid\">\n                        <Col xs={12}>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"12\">\n                                    Custom Item\n                                </Form.Label>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Item Name\" \n                                        defaultValue={payloadCustomItem.itemName} \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                itemName: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"number\" min={0} \n                                        defaultValue={payloadCustomItem.buyingPrice} \n                                        placeholder=\"Buying Price\" \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                buyingPrice: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"2\">\n                                    <Button \n                                        variant=\"success\" style={{ width: '100%' }} size=\"sm\" \n                                        onClick={() => addCustomItem()}\n                                    >\n                                        <i className=\"fa fa-plus\"></i> \n                                        {' '}\n                                        Add\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>Selesai</Button>\n                </Modal.Footer>\n            </Modal>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Create Expense</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Create Expense\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-12\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pengeluaran\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <Form className=\"m-5\">\n                                        <Row>\n                                            <Col xs={6}>\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    date: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                    Set Due Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    dueDate: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Transaction Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Transaction Name\" \n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    submissionName: e.target.value\n                                                                });\n                                                            }}\n                                                            />\n                                                    </Col>\n                                                </Form.Group>\n\n                                            </Col>\n                                            <Col xs={6}>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Vendor Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Vendor Name\" \n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                customerName: e.target.value\n                                                            });\n                                                        }}\n                                                        />\n                                                    </Col>\n                                                    \n                                                </Form.Group>\n\n                                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                                    <Form.Label column sm=\"3\">\n                                                        Submission Category\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                    <Form.Control as=\"select\" \n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                categoryId: e.target.value\n                                                            });\n                                                        }}\n                                                    >\n                                                        <option value=\"\">- Choose Submission Category -</option>\n                                                        {\n                                                            dataCategory && dataCategory.map((data) => (\n                                                                <option key={data.id} value={data.id}>{data.submissionCategory}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12\">\n                                            <Table responsive=\"sm\">\n                                                <thead>\n                                                <tr>\n                                                    <th>No</th>\n                                                    <th>Product</th>\n                                                    <th>Qty</th>\n                                                    <th>Price (IDR)</th>\n                                                    <th>Discount</th>\n                                                    <th>PPN (%)</th>\n                                                    <th>Total (IDR)</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                    { cart.map((r, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index+1}</td>\n                                                            <td>{r.itemName}</td>\n                                                            <td>\n                                                            <CounterInput\n                                                                count={r.qty}\n                                                                min={1}\n                                                                onCountChange={(count) => {\n                                                                    const changeItems = [...cart];\n                                                                    const item = {...changeItems[index]};\n                                                                    item.qty = count\n                                                                    const totalHarga = count * item.buyingPrice\n                                                                    const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                    changeItems[index] = item;\n                                                                    setCart(changeItems)\n                                                                }}\n                                                            /> \n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Price\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.buyingPrice)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.buyingPrice = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                        \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Discount\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.discount)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.discount = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"PPN\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.tax)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.tax = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>{r.total}</td>\n                                                            <td>\n                                                                <i \n                                                                    className=\"fa fa-trash\" \n                                                                    style={{ color:'red' }}\n                                                                    onClick={() => deleteCart(index)}\n                                                                >\n                                                                </i>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12 text-right\">\n                                            <Button variant=\"outline-success\" onClick={handleShow}>\n                                                <i className=\"fa fa-plus\"></i> \n                                                {' '}\n                                                Add Products\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {calculateTotal(cart)}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={12}>\n                                            <Button variant=\"secondary\">Cancel</Button> \n                                            {' '} \n                                            <Button variant=\"success\" onClick={() => checkOut()}> Submit</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItems: (items) =>\n        dispatch({\n            type: ActionTypes.GET_ITEMS,\n            items\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\n","import React, {useEffect} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Button, Table, Tabs, Tab, InputGroup, Form} from 'react-bootstrap';\nimport { formatCurrency } from \"@app/utils/number\";\nimport dayjs from 'dayjs';\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as SubmissionService from '../../../services/submission';\nimport {storeTransaction} from '../../../services/transactions'\nimport {getWallet} from '../../../services/wallet'\nimport Modal from '../../../components/Modal'\n\nconst Submissions = ({\n    getShow,\n    detailSubmission\n}) => {\n\n    const { id } = useParams();\n    const [loading, setLoading] = React.useState(false)\n    const [show, setShow] = React.useState(false)\n    const [dataSubmission, setDataSubmission] = React.useState({})\n    const [fileAttachment, setFileAttachment] = React.useState(null)\n    const [dataWallet, setDataWallet] = React.useState([])\n    const [payloadPayment, setPayloadPayment] = React.useState({\n        date: null,\n        submissionId: id,\n        walletId: null,\n        amount: 0,\n        attachmentTransaction: null\n    })\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const getData = async () => {\n        setLoading(!loading)\n        await SubmissionService.showSubmission(id, {}).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                getShow(response.data.data)\n                setDataSubmission(response.data.data)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n\n        await getWallet().then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                setDataWallet(response.data.data.rows)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    useEffect(() => {\n        setDataSubmission(detailSubmission)\n    }, [detailSubmission])\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem && dataItem.forEach(element => {\n            total += element.qty * element.buyingPrice;\n        });\n        return total;\n    }\n\n    const calculateTotalPaid = (dataItem) => {\n        let total = 0;\n        dataItem && dataItem.forEach(element => {\n            total += element.amount;\n        });\n        return total;\n    }\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    const handleUploadAttachment = () => {\n        setLoading(!loading)\n        const payload = new FormData();\n        payload.append('submissionId', id)\n        payload.append('attachmentSubmissoin', fileAttachment)\n        SubmissionService.storeSubmissionAttachment(payload).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                toast.success('Attachment Submssion Successfully Upload')\n                getData()\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    const handleAddPayment = () => {\n        setLoading(!loading)\n        const payload = new FormData();\n        payload.append('date', payloadPayment.date)\n        payload.append('walletId', payloadPayment.walletId)\n        payload.append('submissionId', payloadPayment.submissionId)\n        payload.append('amount', payloadPayment.amount)\n        payload.append('attachmentTransaction', payloadPayment.attachmentTransaction)\n        storeTransaction(payload).then((response) => {\n            setTimeout(() => {\n                setLoading(false)\n                toast.success('Payment added successfully')\n                getData()\n                setShow(false)\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false)\n            }, 1000);\n        })\n    }\n\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Add Payment\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleAddPayment}\n                body={(\n                    <div className=\"m-5\">\n                        <Form>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Payment Date\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                <Form.Control \n                                    type=\"datetime-local\" \n                                    placeholder=\"Payment Date\" \n                                    onChange={(e) => setPayloadPayment({\n                                        ...payloadPayment,\n                                        date: e.target.value\n                                    })}\n                                />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Amount (in IDR)\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Amount (in IDR)\" \n                                    onChange={(e) => setPayloadPayment({\n                                        ...payloadPayment,\n                                        amount: e.target.value\n                                    })}\n                                />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Wallet\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                    <Form.Control \n                                        as=\"select\" \n                                        onChange={(e) => setPayloadPayment({\n                                            ...payloadPayment,\n                                            walletId: e.target.value\n                                        })}\n                                    >\n                                        <option value=\"\">-Choose Wallet From-</option>\n                                        {\n                                            dataWallet && dataWallet.map((data) => (\n                                                <option key={data.id} value={data.id}>{data.walletName}</option>\n                                            ))\n                                        }\n                                    </Form.Control>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                <Form.Label column sm=\"4\">\n                                    Invoice\n                                </Form.Label>\n                                <Col sm=\"8\">\n                                    <InputGroup className=\"mb-2\">\n                                        <InputGroup.Prepend>\n                                        <InputGroup.Text><i className=\"fa fa-paperclip\"></i></InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.File\n                                            onChange={(e) => setPayloadPayment({\n                                                ...payloadPayment,\n                                                attachmentTransaction: e.target.files[0]\n                                            })}\n                                            id=\"custom-file-translate-scss\"\n                                            label=\"no file chosen\"\n                                            lang=\"en\"\n                                            data-browse=\"Chosee File\"\n                                            custom\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>\n                                Purchase Order #\n                                {id}\n                            </h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Expense\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pengeluaran\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <div className=\"m-5\">\n                                        <Row className=\"mr-4 ml-4 mt-4\">\n                                            <Col xs={2}>\n                                                Date\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dayjs(dataSubmission.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Due Date\n                                            </Col>\n                                            <Col xs={2}>\n                                                : \n                                                {' '}\n                                                {dayjs(dataSubmission.dueDate).format(\"YYYY-MM-DD HH:mm:ss\")}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mr-4 ml-4 mt-2\">\n                                            <Col xs={2}>\n                                                Transaction Name\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dataSubmission.submissionName}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Vendor Name\n                                            </Col>\n                                            <Col xs={2}>\n                                                {/*  */}\n                                            : \n                                            {' '}\n                                            {dataSubmission.customerName}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mr-4 ml-4 mt-2\">\n                                            <Col xs={2}>\n                                            Transaction Type\n                                            </Col>\n                                            <Col xs={4}>\n                                            : \n                                            {' '}\n                                            {dataSubmission.submission_category && dataSubmission.submission_category.submissionType}\n                                            </Col>\n                                            <Col xs={4} style={{ textAlign:'end' }}>\n                                                Status\n                                            </Col>\n                                            <Col xs={2}>\n                                            : \n                                            {'\\u00A0'}\n                                            <Button variant=\"outline-info\" size=\"sm\" style={{ borderRadius:'20px' }}>\n                                                {dataSubmission.status}\n                                            </Button>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <Row>\n                                        <Col xs={12}>\n                                            <Table size=\"lg\" className=\"mb-5 table-size\" responsive>\n                                                <thead>\n                                                    <tr>\n                                                        <th className=\"pl-5\">No</th>\n                                                        <th>Products</th>\n                                                        <th>Qty</th>\n                                                        <th>Price (IDR)</th>\n                                                        <th>Discount (%)</th>\n                                                        <th>PPN (%)</th>\n                                                        <th>Total Price</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {dataSubmission.items && dataSubmission.items.map((data, index) => (\n                                                        <tr key={index}>\n                                                            <td className=\"pl-5\">{1+index}</td>\n                                                            <td>{data.itemName}</td>\n                                                            <td>{data.qty}</td>\n                                                            <td>\n                                                                {convertCurrency(parseFloat(data.buyingPrice))}\n                                                            </td>\n                                                            <td>\n                                                                {data.discount}\n                                                                %\n                                                            </td>\n                                                            <td>\n                                                                {data.tax}\n                                                                %\n                                                            </td>\n                                                            <td>\n                                                                {convertCurrency(parseFloat(data.buyingPrice) * parseFloat(data.qty))}\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                                <tfoot>\n                                                    <tr>\n                                                        <td colSpan=\"5\"></td>\n                                                        <th>PAY</th>\n                                                        <th>\n                                                        \n                                                        {convertCurrency(calculateTotalPaid(dataSubmission.transactions))}\n                                                        </th>\n                                                    </tr>\n                                                    <tr>\n                                                        <td colSpan=\"5\"></td>\n                                                        <th>TOTAL</th>\n                                                        <th>\n                                                            {convertCurrency(calculateTotal(dataSubmission.items))}\n                                                        </th>\n                                                    </tr>\n                                                </tfoot>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"mr-5 pr-5\">\n                                    {dataSubmission.status !== 'PAID' &&  dataSubmission.status !== 'COMPLETE' &&\n                                        <Col xs={12} style={{ textAlign:'end' }}>\n                                            <Button \n                                                variant=\"success\" \n                                                style={{ width:'170px' }} \n                                                onClick={() => setShow(true)}\n                                            >\n                                                ADD PAYMENT\n                                            </Button>\n                                        </Col> \n                                    }\n                                    {dataSubmission.status === 'PAID' &&\n                                        <Col xs={12} style={{ textAlign:'end' }}>\n                                            <Button variant=\"success\" style={{ width:'150px' }} \n                                                // onClick={() => this.setState({ modalPayment: true })}\n                                            >\n                                                    Invoice Selesai\n                                            </Button>\n                                        </Col>\n                                    } \n                                    </Row>\n                                    <Row>\n                                        <Col xs={12}>\n                                            <Tabs defaultActiveKey=\"attachment\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                                                {/* <Tab eventKey=\"notes\" title=\"Notes\" className=\"p-3\">\n                                                    <h1>Notes</h1>\n                                                </Tab> */}\n                                                <Tab eventKey=\"attachment\" title=\"Attachment\" className=\"p-3\">\n                                                    <Table size=\"lg\" className=\"table-size\" responsive>\n                                                        <thead>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>File Name</th>\n                                                                <th>Uploaded At</th>\n                                                                <th>Uploaded By</th>\n                                                                <th>Action</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            { dataSubmission.submission_attachments && dataSubmission.submission_attachments.map((data , index) => (\n                                                                <tr>\n                                                                    <td>{1+index}</td>\n                                                                    <td>{data.attachmentSubmissoin}</td>\n                                                                    <td>{dayjs(data.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                                                                    <td>{data.user.fullName}</td>\n                                                                    <td>\n                                                                        {data.attachmentSubmissoin ? <a href={`${process.env.REACT_APP_URL_ATTACHMENT_SUBMISSIONS+data.attachmentSubmissoin}`} target=\"_blank\"><span style={{ color:'#0DAA66' }}>View</span></a> : '-' }\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </Table>\n                                                    <Row className=\"pt-5 pb-2\">\n                                                        <Col xs={12}>\n                                                            <InputGroup className=\"mb-2\">\n                                                                <InputGroup.Prepend>\n                                                                <InputGroup.Text><i className=\"fa fa-paperclip\"></i></InputGroup.Text>\n                                                                </InputGroup.Prepend>\n                                                                <Form.File \n                                                                    id=\"custom-file-translate-scss\"\n                                                                    label=\"no file chosen\"\n                                                                    capture=\"environment\"\n                                                                    lang=\"en\"\n                                                                    data-browse=\"Chosee File\"\n                                                                    custom\n                                                                    onChange={(e)=> setFileAttachment(e.target.files[0])}\n                                                                />\n                                                            </InputGroup>\n                                                        </Col>\n                                                    </Row>\n                                                    <Button \n                                                        onClick={() => handleUploadAttachment()} \n                                                        variant=\"success\" style={{ float:'right', width:'100px' }} \n                                                        className=\"mt-3\"\n                                                    >\n                                                        UPLOAD\n                                                    </Button>\n                                                </Tab>\n                                                <Tab eventKey=\"paymentRecord\" title=\"Payment Record\" className=\"p-3\">\n                                                    <Table size=\"lg\" className=\"table-size\" responsive>\n                                                        <thead>\n                                                            <tr>\n                                                                <th>No</th>\n                                                                <th>Date</th>\n                                                                <th>Amount</th>\n                                                                <th>Payment Method</th>\n                                                                <th>Attachment</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {dataSubmission.transactions && dataSubmission.transactions.map((data , index) => (\n                                                                <tr>\n                                                                    <td>{1+index}</td>\n                                                                    <td>{dayjs(data.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                                                                    <td>{convertCurrency(parseFloat(data.amount))}</td>\n                                                                    <td>{data.wallet.walletName}</td>\n                                                                    <td>\n                                                                        {data.attachmentTransaction ? <a href={`${process.env.REACT_APP_URL_ATTACHMENT_TRANSACTION+data.attachmentTransaction}`} target=\"_blank\"><span style={{ color:'#0DAA66' }}>View</span></a> : '-' }\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </Table>\n                                                </Tab>\n                                            </Tabs>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    detailSubmission: state.submissions.detailSubmission\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getShow: (detailSubmission) =>\n        dispatch({\n            type: ActionTypes.SHOW_SUBMISSIONS,\n            detailSubmission\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submissions);\n","import React, {useEffect} from 'react';\nimport {Link, useHistory, useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport {Row, Col, Form, Table, Button, Modal} from 'react-bootstrap';\nimport CounterInput from 'react-counter-input'\nimport dayjs from 'dayjs';\n\nimport LoadingSpinner from '../../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../../store/actions';\nimport * as ItemService from '../../../services/items';\nimport {getSpesificSubmissionCategory} from '../../../services/submission-category';\nimport * as SubmissionService from '../../../services/submission';\n\n\nconst Edit = ({getItems, items}) => {\n\n    const { id } = useParams();\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [cart, setCart] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(5);\n    const [dataItems, setDataItems] = React.useState([])\n    const [dataCategory, setDataCategory] = React.useState([])\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [columns, setColumn] = React.useState([]);\n    const [totalBefore, setTotalBefore] = React.useState(0)\n    const [payloadCustomItem, setPayloadCustomItem] = React.useState({\n        itemName: null,\n        buyingPrice: null,\n    })\n    const [payload, setPayload] = React.useState({\n        submissionName: null,\n        date: '',\n        dueDate: '',\n        customerName: null,\n        categoryId: \"\",\n        status: \"\",\n    })\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        await ItemService.getItems(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getItems(data.data.data.rows);\n                setDataItems(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n\n        const optsCategory = {\n            params: {\n                q: 'PENGELUARAN'\n            }\n        }\n\n        await getSpesificSubmissionCategory(optsCategory).then((data) => {\n            setDataCategory(data.data.data)\n        })\n\n        await SubmissionService.showSubmission(id).then((data) => {\n            setTimeout(() => {\n                let totBefore = 0;\n                data.data.data.items.forEach((element) => {\n                    const totalHarga =  element.qty * element.buyingPrice;\n                    const totalHargaDiscount = totalHarga - ((totalHarga * element.discount)/100)\n                    element.total = totalHargaDiscount + ((totalHargaDiscount * element.tax)/100)\n                    element.submissionId = id\n                    totBefore += element.total\n                })\n                setTotalBefore(totBefore)\n                setCart(data.data.data.items)\n                setPayload({\n                    ...payload,\n                    submissionName: data.data.data.submissionName,\n                    dueDate: dayjs(data.data.data.dueDate).format('YYYY-MM-DDTHH:mm'),\n                    date: dayjs(data.data.data.date).format('YYYY-MM-DDTHH:mm'),\n                    categoryId: data.data.data.categoryId,\n                    customerName: data.data.data.customerName,\n                    status: data.data.data.status\n                })\n            }, 1000);\n        })\n    };\n\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const addProductToCart = (rows) => {\n        if(cart.find((datas) => datas.itemName === rows.itemName)){\n            const indexs = cart.findIndex((datass) => datass.itemName === rows.itemName)\n            const itemss = [...cart];\n            const item = {...cart[indexs]};\n            item.submissionId = id\n            item.qty += 1\n            item.total = item.qty * item.buyingPrice\n            itemss[indexs] = item;\n            setCart(itemss)\n        }else{\n            const keranjang = [...cart]\n            rows.qty = 1\n            rows.discount = 0\n            rows.tax = 0\n            rows.submissionId = id\n            rows.total = parseFloat(rows.buyingPrice)\n            keranjang.splice(cart.length, 0, rows);\n            setCart(keranjang)\n        }\n        toast.success('Items Added !')\n    }\n\n    const deleteCart = (index) => {\n        const dataDelete = [...cart]\n        dataDelete.splice(index, 1)\n        setCart(dataDelete)\n    }\n    \n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Item Name',\n                selector: 'itemName',\n                width: '35%'\n            },\n            {\n                name: 'Selling Price',\n                selector: 'buyingPrice',\n                width: '35%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Add Data\"\n                            onClick={() => addProductToCart(row)}\n                            className=\"fa fa-plus fa-lg text-success\"\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [cart, items]);\n\n    const calculateTotal = (dataItem) => {\n        let total = 0;\n        dataItem.forEach(element => {\n            total += element.total;\n        });\n        return total;\n    }\n\n    const addCustomItem = () => {\n        if (dataItems.find((data) => data.itemName === payloadCustomItem.itemName)) {\n            toast.error('item names cannot be the same')\n        } else {\n            if (payloadCustomItem.itemName === null || payloadCustomItem.buyingPrice === null) {\n                toast.error('data cannot be empty')\n            } else {\n                const d = [...dataItems]\n                const data = {\n                    itemName: payloadCustomItem.itemName,\n                    sellingPrice: 0,\n                    buyingPrice: parseFloat(payloadCustomItem.buyingPrice),\n                    productId: 0,\n                }\n                d.splice(size -1, 1)\n                d.splice(0, 0, data)\n                setDataItems(d)\n                setTotalRow(totalRow + 1)\n                setPayloadCustomItem({\n                    ...payloadCustomItem,\n                    itemName: null,\n                    buyingPrice: null\n                })\n            }\n        }\n    }\n\n    const checkOut = async () => {\n        setLoading(!loading)\n        const newPayload = {\n            submissionName: payload.submissionName,\n            date: payload.date,\n            dueDate: payload.dueDate,\n            customerName: payload.customerName,\n            categoryId: payload.categoryId,\n            status: payload.status,\n            items: cart\n        }\n        await SubmissionService.update(id, newPayload).then((response) => {\n            setTimeout(() => {\n                setLoading(false);\n                history.push('/pengeluaran');\n                toast.success('Submissions Updated!');\n            }, 1000);\n        }).catch((error) => {\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        });\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal Add Product */}\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>Product</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <DataTable\n                        title=\"Arnold Movies\"\n                        columns={columns}\n                        data={dataItems}\n                        noHeader\n                        highlightOnHover\n                        paginationTotalRows={totalRow}\n                        paginationPerPage={size}\n                        pagination\n                        paginationServer\n                        onChangePage={handlePageChange}\n                        onChangeRowsPerPage={handlePerRowsChange}\n                    />\n                    <Row className=\"position-relative show-grid\">\n                        <Col xs={12}>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"12\">\n                                    Custom Item\n                                </Form.Label>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Item Name\" \n                                        defaultValue={payloadCustomItem.itemName} \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                itemName: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"5\">\n                                    <Form.Control \n                                        type=\"number\" min={0} \n                                        defaultValue={payloadCustomItem.buyingPrice} \n                                        placeholder=\"Selling Price\" \n                                        onChange={(e) => {\n                                            setPayloadCustomItem({\n                                                ...payloadCustomItem,\n                                                buyingPrice: e.target.value\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col sm=\"2\">\n                                    <Button \n                                        variant=\"success\" style={{ width: '100%' }} size=\"sm\" \n                                        onClick={() => addCustomItem()}\n                                    >\n                                        <i className=\"fa fa-plus\"></i> \n                                        {' '}\n                                        Add\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>Selesai</Button>\n                </Modal.Footer>\n            </Modal>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Edit Expense</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">Home</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Edit Expense\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-12\">\n                                            <Link style={{ height: '38px', paddingTop: '8px' }} to=\"/pengeluaran\" className=\"float-right btn btn-warning btn-sm\">\n                                                <i className=\"fa fa-backward\"></i> \n                                                {' '}\n                                                Back\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <Form className=\"m-5\">\n                                        <Row>\n                                            <Col xs={6}>\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"datetime-local\"\n                                                        defaultValue={payload.date}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    date: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                    Set Due Date\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control \n                                                            type=\"datetime-local\" \n                                                            value={payload.dueDate}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    dueDate: e.target.value\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Transaction Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Transaction Name\"\n                                                            defaultValue={payload.submissionName}\n                                                            onChange={(e) => {\n                                                                setPayload({\n                                                                    ...payload,\n                                                                    submissionName: e.target.value\n                                                                });\n                                                            }}\n                                                            />\n                                                    </Col>\n                                                </Form.Group>\n\n                                            </Col>\n                                            <Col xs={6}>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                    Customer Name\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                        <Form.Control type=\"text\" placeholder=\"Customer Name\" \n                                                        defaultValue={payload.customerName}\n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                customerName: e.target.value\n                                                            });\n                                                        }}\n                                                        />\n                                                    </Col>\n                                                    \n                                                </Form.Group>\n\n                                                <Form.Group as={Row}>\n                                                    <Form.Label column sm=\"3\">\n                                                        Submission Category\n                                                    </Form.Label>\n                                                    <Col sm=\"9\">\n                                                    <Form.Control as=\"select\" \n                                                        value={payload.categoryId}\n                                                        onChange={(e) => {\n                                                            setPayload({\n                                                                ...payload,\n                                                                categoryId: e.target.value\n                                                            });\n                                                        }}\n                                                    >\n                                                        <option value=\"\">- Choose Submission Category -</option>\n                                                        {\n                                                            dataCategory && dataCategory.map((data) => (\n                                                                <option key={data.id} value={data.id}>{data.submissionCategory}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12\">\n                                            <Table responsive=\"sm\">\n                                                <thead>\n                                                <tr>\n                                                    <th>No</th>\n                                                    <th>Product</th>\n                                                    <th>Qty</th>\n                                                    <th>Price (IDR)</th>\n                                                    <th>Discount</th>\n                                                    <th>PPN (%)</th>\n                                                    <th>Total (IDR)</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                    { cart.map((r, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index+1}</td>\n                                                            <td>{r.itemName}</td>\n                                                            <td>\n                                                            <CounterInput\n                                                                count={r.qty}\n                                                                min={1}\n                                                                onCountChange={(count) => {\n                                                                    const changeItems = [...cart];\n                                                                    const item = {...changeItems[index]};\n                                                                    item.qty = count\n                                                                    const totalHarga = count * item.buyingPrice\n                                                                    const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                    changeItems[index] = item;\n                                                                    setCart(changeItems)\n                                                                }}\n                                                            /> \n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Price\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.buyingPrice)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.buyingPrice = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                        \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"Discount\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.discount)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.discount = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <Form.Control\n                                                                    placeholder=\"PPN\"\n                                                                    type=\"number\" \n                                                                    value={parseFloat(r.tax)} \n                                                                    onChange={(e) => {\n                                                                        const changeItems = [...cart];\n                                                                        const item = {...changeItems[index]};\n                                                                        item.tax = e.target.value\n                                                                        const totalHarga = item.qty * item.buyingPrice\n                                                                        const totalHargaDiscount = totalHarga - ((totalHarga * item.discount)/100)\n                                                                    \n                                                                        item.total = totalHargaDiscount + ((totalHargaDiscount * item.tax)/100)\n                                                                        changeItems[index] = item;\n                                                                        setCart(changeItems)\n                                                                    }} \n                                                                />\n                                                            </td>\n                                                            <td>{r.total}</td>\n                                                            <td>\n                                                                <i \n                                                                    className=\"fa fa-trash\" \n                                                                    style={{ color:'red' }}\n                                                                    onClick={() => deleteCart(index)}\n                                                                >\n                                                                </i>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row m-5\">\n                                        <div className=\"col-md-12 text-right\">\n                                            <Button variant=\"outline-success\" onClick={handleShow}>\n                                                <i className=\"fa fa-plus\"></i> \n                                                {' '}\n                                                Add Products\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(payload.status === 'APPROVED' || payload.status === 'PARTIAL PAID' || payload.status === 'PAID') &&  <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>THE PREVIOUS TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {totalBefore}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n                                    }\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={10}>\n                                            <strong>TOTAL</strong> \n                                        </Col>\n\n                                        <Col xs={2}>\n                                            <strong>\n                                                Rp. \n                                                {' '}\n                                                {calculateTotal(cart)}\n                                            </strong>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                                        <Col xs={12}>\n                                            <Button variant=\"secondary\">Cancel</Button> \n                                            {' '} \n                                            <Button variant=\"success\" onClick={() => checkOut()}> Submit</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItems: (items) =>\n        dispatch({\n            type: ActionTypes.GET_ITEMS,\n            items\n        }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as WalletService from '../../services/wallet';\n\nconst Wallet = ({\n    getWallet,\n    wallet,\n    storeWallet,\n    deleteWallet,\n    updateWallet\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        walletName: null\n    });\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataWallet, setDataWallet] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataWallet(wallet);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '20%'\n            },\n            {\n                name: 'Wallet Name',\n                selector: 'walletName',\n                width: '70%'\n            },\n            {\n                name: 'Action',\n                width: '10%',\n                cell: (row, index) => (\n                    <div>\n                        <i\n                            role=\"button\"\n                            aria-label=\"Edit Data\"\n                            onClick={() => handleShow(index, row)}\n                            className=\"fa fa-edit fa-lg\"\n                            style={{color: '#0275d8'}}\n                        >\n                        </i>\n                    {' '}\n                        <i\n                            role=\"button\"\n                            aria-label=\"Hapus Data\"\n                            onClick={(e) => handleDelete(row.id, index)}\n                            className=\"fa fa-trash fa-lg\"\n                            style={{color: '#d9534f'}}\n                        >\n                        </i>\n                    </div>\n                )\n            }\n        ]);\n    }, [wallet]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n                q: search\n            }\n        };\n        setLoading(!loading);\n        WalletService.getWallet(opts).then((data) => {\n            setTimeout(() => {\n                setLoading(false);\n                getWallet(data.data.data.rows);\n                setTotalRow(data.data.data.totalItems);\n            }, 1000);\n        });\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleDelete = (id, index) => {\n        if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n            // eslint-disable-line no-alert\n            setLoading(!loading);\n            WalletService.deleteWallet(id)\n                .then((data) => {\n                    setTimeout(() => {\n                        deleteWallet(index);\n                        setLoading(false);\n                    }, 1000);\n                    toast.success('Wallet Deleted!');\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    const handleShow = (index, data) => {\n        setShow(true);\n        setTabIndex(index);\n        if (data) {\n            const {createdAt, updatedAt, ...newData} = data;\n            setPayload({...newData});\n        } else {\n            clearInput();\n        }\n    };\n\n    const clearInput = () => {\n        setPayload({\n            id: null,\n            walletName: null\n        });\n    };\n    const handleSubmit = () => {\n        setLoading(!loading);\n        if (tabIndex === -1) {\n            const payloadData = {\n                walletName: payload.walletName\n            };\n            WalletService.storeWallet(payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        storeWallet(data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Wallet Created!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        } else {\n            const payloadData = {\n                walletName: payload.walletName\n            };\n            WalletService.updateWallet(payload.id, payloadData)\n                .then((data) => {\n                    setTimeout(() => {\n                        updateWallet(tabIndex, data.data);\n                        setLoading(false);\n                        setShow(false);\n                        toast.success('Wallet Updated!');\n                    }, 1000);\n                })\n                .catch((error) => {\n                    setTimeout(() => {\n                        setLoading(false);\n                    }, 1000);\n                });\n        }\n    };\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            {/* Modal */}\n            <Modal\n                customTitle={(\n                    <div>\n                        <h4\n                            style={{\n                                fontSize: '1.3rem',\n                                color: '#252733',\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            {tabIndex === -1 ? 'Create Wallet' : 'Edit Wallet'}\n                        </h4>\n                    </div>\n                  )}\n                size=\"lg\"\n                show={show}\n                onHide={handleClose}\n                onClose={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                onSubmit={handleSubmit}\n                body={(\n                    <div className=\"m-5\">\n                        <div className=\"form-group row\">\n                            <label\n                                htmlFor=\"Wallet Name\"\n                                className=\"col-sm-3 col-form-label\"\n                            >\n                                Wallet Name\n                            </label>\n                            <div className=\"col-sm-9\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    defaultValue={payload.walletName}\n                                    placeholder=\"Wallet Name\"\n                                    onChange={(e) => {\n                                        setPayload({\n                                            ...payload,\n                                            walletName: e.target.value\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                  )}\n                submitTitle=\"Save\"\n                closeTitle=\"Close\"\n            />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Wallet</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Wallet\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-5\">\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span\n                                                        className=\"input-group-text\"\n                                                        style={{\n                                                            background:\n                                                                'transparent',\n                                                            borderRight: 'none'\n                                                        }}\n                                                    >\n                                                        <i\n                                                            style={{\n                                                                color:\n                                                                    'rgb(17, 78, 96)'\n                                                            }}\n                                                            className=\"fas fa-search\"\n                                                        >\n                                                        </i>\n                                                    </span>\n                                                </div>\n                                                <input\n                                                    type=\"text\"\n                                                    style={{borderLeft: 'none'}}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Search Wallet\"\n                                                    defaultValue={search}\n                                                    onChange={(e) =>\n                                                        setSearch(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                    onKeyPress={(e) =>\n                                                        handleSearch(e)\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-7\">\n                                            <button\n                                                className=\"float-right btn btn-success btn-sm\"\n                                                type=\"button\"\n                                                style={{\n                                                    background:\n                                                        'rgb(17, 78, 96)',\n                                                    borderColor:\n                                                        'rgb(17, 78, 96)'\n                                                }}\n                                                onClick={() => handleShow(-1)}\n                                            >\n                                                Create Wallet\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataWallet}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    wallet: state.wallet.wallet,\n    detailWallet: state.wallet.detailWallet\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getWallet: (wallet) =>\n        dispatch({\n            type: ActionTypes.LOAD_WALLET,\n            wallet\n        }),\n    storeWallet: (detailWallet) =>\n        dispatch({\n            type: ActionTypes.STORE_WALLET,\n            detailWallet\n        }),\n    deleteWallet: (indexWallet) =>\n        dispatch({\n            type: ActionTypes.DELETE_WALLET,\n            index: indexWallet\n        }),\n    updateWallet: (indexWallet, detailWallet) =>\n        dispatch({\n            type: ActionTypes.UPDATE_WALLET,\n            detailWallet,\n            index: indexWallet\n        })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport { Badge } from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport { formatCurrency } from \"@app/utils/number\";\n\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as ItemsService from '../../services/items';\n\nconst Items = ({\n    getItem,\n    items\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        productCategory: null\n    });\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataProductCategory, setDataProductCategory] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataProductCategory(items);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '5%'\n            },\n            {\n                name: 'Name',\n                selector: 'itemName',\n            },\n            {\n                name: 'Due Date',\n                selector: (row, index) => row.submissions ?  dayjs(row.submissions.dueDate).format(\"YYYY-MM-DD HH:mm:ss\") : '-',\n            },\n            {\n                name: 'Quantity',\n                selector: 'qty',\n            },\n            {\n                name: 'Selling Price',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.sellingPrice))}\n                    </div>\n                )\n            },\n            {\n                name: 'Buying Price',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.buyingPrice))}\n                    </div>\n                )\n            },\n            {\n                name: 'Discount',\n                selector: (row, index) => (\n                    <div>\n                        {row.discount}\n                        %\n                    </div>\n                )\n            },\n            {\n                name: 'Tax',\n                selector: (row, index) => (\n                    <div>\n                        {row.tax}\n                        %\n                    </div>\n                )\n            },\n            {\n                name: 'Type Submission',\n                selector: (row, index) => (\n                    <div>\n                        {row.submissions && row.submissions.submission_category.submissionType === 'PEMASUKAN' ? \n                            <Badge variant=\"success\" style={{ fontSize:'13px' }}>\n                                <i className=\"fa fa-arrow-up\"></i> \n                                {'\\u00A0'}\n                                {'\\u00A0'}\n                                {row.submissions ? row.submissions.submission_category.submissionType : '-'}\n                            </Badge> : \n                            <Badge variant=\"danger\" style={{ fontSize:'13px' }}>\n                                <i className=\"fa fa-arrow-down\"></i> \n                                {'\\u00A0'}\n                                {'\\u00A0'}\n                                {row.submissions ? row.submissions.submission_category.submissionType : '-'}\n                            </Badge> \n                        }\n                        \n                    </div>\n                )\n            },\n        ]);\n    }, [items]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        ItemsService.get(opts).then(\n            (data) => {\n                setTimeout(() => {\n                    setLoading(false);\n                    getItem(data.data.data.rows);\n                    setTotalRow(data.data.data.totalItems);\n                }, 1000);\n            }\n        );\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    // const handleDelete = (id, index) => {\n    //     if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n    //         setLoading(!loading);\n    //         ProductSubmissionCategoryService.deleteProductCategory(id)\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     deleteProductCategory(index);\n    //                     setLoading(false);\n    //                 }, 1000);\n    //                 toast.success('Product Category Deleted!');\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     }\n    // };\n\n    // const handleShow = (index, data) => {\n    //     setShow(true);\n    //     setTabIndex(index);\n    //     if (data) {\n    //         const {createdAt, updatedAt, ...newData} = data;\n    //         setPayload({...newData});\n    //     } else {\n    //         clearInput();\n    //     }\n    // };\n\n    // const clearInput = () => {\n    //     setPayload({\n    //         id: null,\n    //         productCategory: null\n    //     });\n    // };\n    // const handleSubmit = () => {\n    //     setLoading(!loading);\n    //     if (tabIndex === -1) {\n    //         const payloadData = {\n    //             productCategory: payload.productCategory\n    //         };\n    //         ProductSubmissionCategoryService.storeProductCategory(payloadData)\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     storeProductCategory(data.data);\n    //                     setLoading(false);\n    //                     setShow(false);\n    //                     toast.success('Product Category Created!');\n    //                 }, 1000);\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     } else {\n    //         const payloadData = {\n    //             productCategory: payload.productCategory\n    //         };\n    //         ProductSubmissionCategoryService.updateProductCategory(\n    //             payload.id,\n    //             payloadData\n    //         )\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     updateProductCategory(tabIndex, data.data);\n    //                     setLoading(false);\n    //                     setShow(false);\n    //                     toast.success('Product Category Updated!');\n    //                 }, 1000);\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     }\n    // };\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>List Items</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Items\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-3\">\n                                            <button\n                                                    className=\"btn btn-success btn-sm\"\n                                                    type=\"button\"\n                                                    style={{\n                                                        padding: '7px',\n                                                        width:'100%',\n                                                        background:\n                                                            'rgb(17, 78, 96)',\n                                                        borderColor:\n                                                            'rgb(17, 78, 96)',\n                                                        fontSize:'15px'\n                                                    }}\n                                                    // onClick={() => handleShow(1)}\n                                                >\n                                                    <i className=\"fa fa-filter\"></i> \n                                                    {'\\u00A0'}\n                                                    {'\\u00A0'}\n                                                    Filter\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataProductCategory}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItem: (items) =>\n        dispatch(\n            {type: ActionTypes.LOAD_ITEMS, items}\n    ),\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport {toast} from 'react-toastify';\nimport { Badge } from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport { formatCurrency } from \"@app/utils/number\";\n\nimport Modal from '../../components/Modal';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as TransactionsService from '../../services/transactions';\n\nconst Items = ({\n    getTransactions,\n    transactions\n}) => {\n    const [t] = useTranslation();\n\n    const [payload, setPayload] = React.useState({\n        id: null,\n        productCategory: null\n    });\n\n    const [search, setSearch] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataProductCategory, setDataProductCategory] = React.useState([]);\n    const [show, setShow] = React.useState(false);\n    const [tabIndex, setTabIndex] = React.useState(-1);\n    const [columns, setColumn] = React.useState([]);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataProductCategory(transactions);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '5%'\n            },\n            {\n                name: 'Nama Submission',\n                selector: 'submission.submissionName',\n            },\n            {\n                name: 'Amount',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.amount))}\n                    </div>\n                )\n            },\n            {\n                name: 'Date',\n                selector: (row, index) => dayjs(row.date).format(\"YYYY-MM-DD HH:mm:ss\"),\n            },\n            {\n                name: 'Wallet',\n                selector: 'wallet.walletName',\n            },\n            {\n                name: 'Category Submission',\n                selector: 'submission.submission_category.submissionCategory'\n            },\n            {\n                name: 'Type Submission',\n                selector: (row, index) => (\n                    <div>\n                        {row.submission.submission_category.submissionType === 'PEMASUKAN' ? \n                            <Badge variant=\"success\" style={{ fontSize:'13px' }}>\n                                <i className=\"fa fa-arrow-up\"></i> \n                                {'\\u00A0'}\n                                {'\\u00A0'}\n                                {row.submission.submission_category.submissionType}\n                            </Badge> : \n                            <Badge variant=\"danger\" style={{ fontSize:'13px' }}>\n                                <i className=\"fa fa-arrow-down\"></i> \n                                {'\\u00A0'}\n                                {'\\u00A0'}\n                                {row.submission.submission_category.submissionType}\n                            </Badge> \n                        }\n                        \n                    </div>\n                )\n            },\n        ]);\n    }, [transactions]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        const opts = {\n            params: {\n                page: pageChange,\n                size: sizeChange,\n            }\n        };\n        setLoading(!loading);\n        TransactionsService.getTransactions(opts).then(\n            (data) => {\n                setTimeout(() => {\n                    setLoading(false);\n                    getTransactions(data.data.data.rows);\n                    setTotalRow(data.data.data.totalItems);\n                }, 1000);\n            }\n        );\n    };\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const handleSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            getData(page, size);\n        }\n    };\n\n    const handleClose = () => setShow(false);\n\n    // const handleDelete = (id, index) => {\n    //     if (window.confirm('Anda Yakin Ingin Menghapus Data Ini ?')) {\n    //         setLoading(!loading);\n    //         ProductSubmissionCategoryService.deleteProductCategory(id)\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     deleteProductCategory(index);\n    //                     setLoading(false);\n    //                 }, 1000);\n    //                 toast.success('Product Category Deleted!');\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     }\n    // };\n\n    // const handleShow = (index, data) => {\n    //     setShow(true);\n    //     setTabIndex(index);\n    //     if (data) {\n    //         const {createdAt, updatedAt, ...newData} = data;\n    //         setPayload({...newData});\n    //     } else {\n    //         clearInput();\n    //     }\n    // };\n\n    // const clearInput = () => {\n    //     setPayload({\n    //         id: null,\n    //         productCategory: null\n    //     });\n    // };\n    // const handleSubmit = () => {\n    //     setLoading(!loading);\n    //     if (tabIndex === -1) {\n    //         const payloadData = {\n    //             productCategory: payload.productCategory\n    //         };\n    //         ProductSubmissionCategoryService.storeProductCategory(payloadData)\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     storeProductCategory(data.data);\n    //                     setLoading(false);\n    //                     setShow(false);\n    //                     toast.success('Product Category Created!');\n    //                 }, 1000);\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     } else {\n    //         const payloadData = {\n    //             productCategory: payload.productCategory\n    //         };\n    //         ProductSubmissionCategoryService.updateProductCategory(\n    //             payload.id,\n    //             payloadData\n    //         )\n    //             .then((data) => {\n    //                 setTimeout(() => {\n    //                     updateProductCategory(tabIndex, data.data);\n    //                     setLoading(false);\n    //                     setShow(false);\n    //                     toast.success('Product Category Updated!');\n    //                 }, 1000);\n    //             })\n    //             .catch((error) => {\n    //                 setTimeout(() => {\n    //                     setLoading(false);\n    //                 }, 1000);\n    //             });\n    //     }\n    // };\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>List Transaksi</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Transaksi\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-sm-3\">\n                                            <button\n                                                    className=\"btn btn-success btn-sm\"\n                                                    type=\"button\"\n                                                    style={{\n                                                        padding: '7px',\n                                                        width:'100%',\n                                                        background:\n                                                            'rgb(17, 78, 96)',\n                                                        borderColor:\n                                                            'rgb(17, 78, 96)',\n                                                        fontSize:'15px'\n                                                    }}\n                                                    // onClick={() => handleShow(1)}\n                                                >\n                                                    <i className=\"fa fa-filter\"></i> \n                                                    {'\\u00A0'}\n                                                    {'\\u00A0'}\n                                                    Filter\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataProductCategory}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    transactions: state.transactions.transactions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getTransactions: (transactions) =>\n        dispatch(\n            {type: ActionTypes.LOAD_TRANSACTIONS, transactions}\n    ),\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from 'react-data-table-component';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { formatCurrency } from \"@app/utils/number\";\n\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner';\nimport * as ActionTypes from '../../store/actions';\nimport * as SubmissionService from '../../services/submission';\n\nconst Laporan = ({\n    getItem,\n    items\n}) => {\n    const [t] = useTranslation();\n\n    const [page, setPage] = React.useState(0);\n    const [size, setSize] = React.useState(10);\n    const [totalRow, setTotalRow] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [dataProductCategory, setDataProductCategory] = React.useState([]);\n    const [columns, setColumn] = React.useState([]);\n    const [typeSubmission, setTypeSubmission] = React.useState('PEMASUKAN');\n    const [dateStart, setDateStart] = React.useState(null);\n    const [dateEnd, setDateEnd] = React.useState(null);\n\n    useEffect(() => {\n        getData(page, size);\n    }, []);\n\n    useEffect(() => {\n        setDataProductCategory(items);\n        setColumn([\n            {\n                name: 'No',\n                cell: (row, index) => `${index + 1 + (page + 1 - 1) * size}.`,\n                width: '5%'\n            },\n            {\n                name: 'Name',\n                selector: 'itemName',\n            },\n            {\n                name: 'Jumlah',\n                selector: 'qty',\n            },\n            {\n                name: 'Harga',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.price))}\n                    </div>\n                )\n            },\n            {\n                name: 'Total',\n                selector: (row, index) => (\n                    <div>\n                        {convertCurrency(parseFloat(row.total))}\n                    </div>\n                )\n            },\n        ]);\n    }, [items]);\n\n    const getData = async (pageChange, sizeChange = size) => {\n        setLoading(!loading);\n        const payloadd = {\n            'typeSubmission': typeSubmission,\n            'startDate' : dateStart,\n            'endDate': dateEnd,\n            page: pageChange,\n            size: sizeChange,\n        }\n        SubmissionService.laporan(payloadd,{}).then(\n            (data) => {\n                setTimeout(() => {\n                    setLoading(false);\n                    getItem(data.data.rows);\n                    setTotalRow(data.data.totalItems);\n                }, 1000);\n            }\n        );\n    };\n\n    const handleFilter = (e) => {\n        e.preventDefault()\n        getData(0)\n    }\n\n    const handlePageChange = (pageChange) => {\n        setPage(pageChange - 1);\n        getData(pageChange - 1, size);\n    };\n\n    const handlePerRowsChange = async (newPerPage, pageCurrent) => {\n        setSize(newPerPage);\n        getData(pageCurrent - 1, newPerPage);\n    };\n\n    const convertCurrency = (total) => {\n        return \"Rp. \"+formatCurrency(total);\n    }\n\n    return (\n        <>\n            <LoadingSpinner isLoading={loading} />\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>Lihat Laporan Keuangan</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    Laporan Keuangan\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                <form>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 text-start\">\n                                            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                <Col sm=\"8\" style={{ marginTop: \"6px\" }}>\n                                                <Form.Check\n                                                    inline\n                                                    label=\"PEMASUKAN\"\n                                                    type=\"radio\"\n                                                    value=\"PEMASUKAN\"\n                                                    id={`inline-radio-1`}\n                                                    onChange={(e) => setTypeSubmission(e.target.value)}\n                                                    checked={typeSubmission === \"PEMASUKAN\"}\n                                                />\n                                                <Form.Check\n                                                    inline\n                                                    label=\"PENGELUARAN\"\n                                                    type=\"radio\"\n                                                    value=\"PENGELUARAN\"\n                                                    onChange={(e) => setTypeSubmission(e.target.value)}\n                                                    id={`inline-radio-2`}\n                                                    checked={typeSubmission === \"PENGELUARAN\"}\n                                                />\n                                                </Col>\n                                            </Form.Group>\n                                        </div>\n                                        </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col-4\">\n                                            <div className=\"form-group\">\n                                                <label>Dari Tanggal</label>\n                                                <input type=\"datetime-local\" onChange={(e) => setDateStart(e.target.value)} defaultValue={dateStart} className=\"form-control\" placeholder=\"Enter ...\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"form-group\">\n                                                <label>Sampai Tanggal</label>\n                                                <input type=\"datetime-local\" onChange={(e) => setDateEnd(e.target.value)} defaultValue={dateEnd} className=\"form-control\" placeholder=\"Enter ...\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col-4\">\n                                            <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={handleFilter}>Lihat Laporan Keuangan</button>  \n                                            <button type=\"submit\" className=\"btn btn-secondary\">Reset</button>\n                                        </div>\n                                        <div className=\"col-8 text-right\">\n                                            <button type=\"submit\" className=\"btn btn-success\">Print</button>\n                                        </div>\n                                    </div>\n                                </form>                                  \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <DataTable\n                                        title=\"Arnold Movies\"\n                                        columns={columns}\n                                        data={dataProductCategory}\n                                        noHeader\n                                        highlightOnHover\n                                        paginationTotalRows={totalRow}\n                                        paginationPerPage={size}\n                                        pagination\n                                        paginationServer\n                                        onChangePage={handlePageChange}\n                                        onChangeRowsPerPage={\n                                            handlePerRowsChange\n                                        }\n                                    />\n                                    <div className=\"row ml-3\">\n                                        Total Pemasukan : Rp. 2000000\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItem: (items) =>\n        dispatch(\n            {type: ActionTypes.LOAD_ITEMS, items}\n    ),\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Laporan);\n","import instance from '../utils/axios';\n\nexport const loginByAuth = async (email, password) => {\n    const token = await instance.post('/login', {\n                email, password\n            });\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\nexport const getProfile = async () => {\n    const data = await instance.get('/me');\n    return data;\n}\n\nexport const logOut = async () => {\n    const data = await instance.post('/logout')\n    return data;\n}\n","import React, {useRef, useEffect, useState} from 'react';\nimport {useHistory, Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\n// import Moment from 'react-moment';\nimport {useTranslation} from 'react-i18next';\nimport * as AuthService from '../../../../services/auth';\nimport * as ActionTypes from '../../../../store/actions';\n\nconst UserDropdown = ({user, onUserLogout}) => {\n    const dropdownRef = useRef(null);\n    const history = useHistory();\n    const {t} = useTranslation();\n\n    const [dropdownState, updateDropdownState] = useState({\n        isDropdownOpen: false\n    });\n\n    const toggleDropdown = () => {\n        updateDropdownState({isDropdownOpen: !dropdownState.isDropdownOpen});\n    };\n\n    const handleClickOutside = (event) => {\n        if (\n            dropdownRef &&\n            dropdownRef.current &&\n            !dropdownRef.current.contains(event.target)\n        ) {\n            updateDropdownState({isDropdownOpen: false});\n        }\n    };\n\n    const logOut = (event) => {\n        toggleDropdown();\n        event.preventDefault();\n        AuthService.logOut()\n            .then(() => {\n                onUserLogout();\n                history.push('/login');\n            })\n            .catch((error) => {\n                console.log(error); // eslint-disable-line no-console\n            });\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside, false);\n        return () => {\n            document.removeEventListener(\n                'mousedown',\n                handleClickOutside,\n                false\n            );\n        };\n    });\n\n    let className = 'dropdown-menu dropdown-menu-lg dropdown-menu-right';\n\n    if (dropdownState.isDropdownOpen) {\n        className += ' show';\n    }\n\n    return (\n        <li ref={dropdownRef} className=\"nav-item dropdown user-menu\">\n            <button\n                onClick={toggleDropdown}\n                type=\"button\"\n                className=\"nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\"\n            >\n                <img\n                    src={\n                        user.imageUser\n                            ? process.env.REACT_APP_URL_FOTO_USER +\n                              user.imageUser\n                            : '/img/default-profile.png'\n                    }\n                    className=\"user-image img-circle elevation-2\"\n                    alt=\"User\"\n                />\n                {/* <span className=\"d-none d-md-inline\">{email}</span> */}\n            </button>\n            <ul className={className}>\n                <li className=\"user-header bg-primary\">\n                    <img\n                        src={\n                            user.imageUser\n                                ? process.env.REACT_APP_URL_FOTO_USER +\n                                  user.imageUser\n                                : '/img/default-profile.png'\n                        }\n                        className=\"img-circle elevation-2\"\n                        alt=\"User\"\n                    />\n                    <p>\n                        {user.fullName}\n                        <small>\n                            <span>{user.role}</span>\n                            {/* <Moment format=\"D MMM YYYY\" withTitle>\n                                {user.createdAt}\n                            </Moment> */}\n                        </small>\n                    </p>\n                </li>\n                {/* <li className=\"user-body\">\n                    <div className=\"row\">\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/\">{t('header.user.followers')}</Link>\n                        </div>\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/\">{t('header.user.sales')}</Link>\n                        </div>\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/\">{t('header.user.friends')}</Link>\n                        </div>\n                    </div>\n                </li> */}\n                <li className=\"user-footer\">\n                    <Link\n                        to=\"/profile\"\n                        onClick={toggleDropdown}\n                        className=\"btn btn-default btn-flat\"\n                    >\n                        {t('header.user.profile')}\n                    </Link>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-default btn-flat float-right\"\n                        onClick={logOut}\n                    >\n                        {t('login.button.signOut')}\n                    </button>\n                </li>\n            </ul>\n        </li>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogout: () => dispatch({type: ActionTypes.LOGOUT_USER})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDropdown);\n","import React from 'react';\n// import {Link} from 'react-router-dom';\n// import {useTranslation} from 'react-i18next';\n// import Messages from './messages-dropdown/MessagesDropdown';\n// import Notifications from './notifications-dropdown/NotificationsDropdown';\n// import Languages from './languages-dropdown/LanguagesDropdown';\nimport User from './user-dropdown/UserDropdown';\n\nconst Header = ({toggleMenuSidebar}) => {\n    // const [t] = useTranslation();\n    return (\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            {/* Left navbar links */}\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <button\n                        onClick={() => toggleMenuSidebar()}\n                        type=\"button\"\n                        className=\"nav-link\"\n                        data-widget=\"pushmenu\"\n                        href=\"#\"\n                    >\n                        <i className=\"fas fa-bars\" />\n                    </button>\n                </li>\n                {/* <li className=\"nav-item d-none d-sm-inline-block\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        {t('header.label.home')}\n                    </Link>\n                </li>\n                <li className=\"nav-item d-none d-sm-inline-block\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        {t('header.label.contact')}\n                    </Link>\n                </li> */}\n            </ul>\n            {/* <form className=\"form-inline ml-3\">\n                <div className=\"input-group input-group-sm\">\n                    <input\n                        className=\"form-control form-control-navbar\"\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        aria-label=\"Search\"\n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-navbar\" type=\"submit\">\n                            <i className=\"fas fa-search\" />\n                        </button>\n                    </div>\n                </div>\n            </form> */}\n            <ul className=\"navbar-nav ml-auto\">\n                {/* <Messages /> */}\n                {/* <Notifications /> */}\n                {/* <Languages /> */}\n                <User />\n                {/* <li className=\"nav-item\">\n          <button\n            className=\"nav-link\"\n            data-widget=\"control-sidebar\"\n            data-slide=\"true\"\n            type=\"button\"\n          >\n            <i className=\"fas fa-th-large\" />\n          </button>\n        </li> */}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n// import {version} from '../../../../package.json';\n\nconst Footer = () => {\n    const {t} = useTranslation();\n\n    return (\n        <footer className=\"main-footer\">\n            {/* <div className=\"float-right d-none d-sm-block\">\n                <b>{t('footer.version')}</b>\n                <b> </b>\n                <span>{version}</span>\n            </div> */}\n            <strong>\n                <span>Copyright © 2019-2020 </span>\n                <a\n                    href=\"https://instagram.com/alhamdibahri\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    alhamdibahri\n                </a>\n                <span>.</span>\n            </strong>\n            <span> </span>\n            <span>{t('footer.copyright')}</span>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import {defineAbility} from '@casl/ability';\n\n/**\n * Defines how to detect object's type: https://stalniy.github.io/casl/abilities/2017/07/20/define-abilities.html\n */\n// function subjectName(item) {\n//   if (!item || typeof item === 'string') {\n//     return item\n//   }\n\n//   return item.__type\n// }\n\nexport default defineAbility((can, cannot) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n        if (user.role === 'karyawan') {\n            cannot('show', 'ManageUser');\n            cannot('show', 'Laporan');\n            cannot('show', 'Wallet');\n            can('show', 'DaftarTransaksi');\n        } else {\n            can('manage', 'all');\n        }\n    }\n});\n","import { createCanBoundTo } from '@casl/react';\nimport ability from '../config/ability';\n\nexport default createCanBoundTo(ability);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {NavLink, Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport Can from '../../../components/Can';\n\nconst MenuSidebar = ({user}) => {\n    const {t} = useTranslation();\n    // const ability = useAbility(AbilityContext);\n    return (\n        <aside\n            className=\"main-sidebar sidebar-dark-primary elevation-4\"\n            style={{backgroundColor: '#114e60', color: 'white !important'}}\n        >\n            <Link to=\"/\" className=\"brand-link\">\n                <img\n                    src=\"/img/logo.png\"\n                    alt=\"AdminLTE Logo\"\n                    className=\"brand-image img-circle elevation-3\"\n                    style={{opacity: '.8'}}\n                />\n                <span className=\"brand-text font-weight-light\">\n                    EL-MALIK\n                    <br />\n                    <small style={{fontSize: '11px'}}>\n                        Aplikasi Pencatatan Keuangan\n                    </small>\n                </span>\n            </Link>\n            <div className=\"sidebar\">\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                    <div className=\"image\">\n                        <img\n                            src={\n                                user.imageUser\n                                    ? process.env.REACT_APP_URL_FOTO_USER +\n                                      user.imageUser\n                                    : '/img/default-profile.png'\n                            }\n                            className=\"img-circle elevation-2\"\n                            alt=\"User\"\n                        />\n                    </div>\n                    <div className=\"info\">\n                        <Link to=\"/\" className=\"d-block\">\n                            {user.email}\n                        </Link>\n                    </div>\n                </div>\n                <nav className=\"mt-2\">\n                    <ul\n                        className=\"nav nav-pills nav-sidebar flex-column\"\n                        data-widget=\"treeview\"\n                        role=\"menu\"\n                        data-accordion=\"false\"\n                    >\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-tachometer-alt\" />\n                                <p>{t('menusidebar.label.dashboard')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/company-profile\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-user\" />\n                                <p>{t('menusidebar.label.profile_company')}</p>\n                            </NavLink>\n                        </li>\n                        <Can do=\"show\" on=\"ManageUser\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    to=\"/manage-user\"\n                                    exact\n                                    className=\"nav-link\"\n                                >\n                                    <i className=\"nav-icon fas fa-users\" />\n                                    <p>{t('menusidebar.label.manage_user')}</p>\n                                </NavLink>\n                            </li>\n                        </Can>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/pemasukan\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-dollar-sign\" />\n                                <p>{t('menusidebar.label.pemasukan')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/pengeluaran\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-shopping-cart\" />\n                                <p>{t('menusidebar.label.pengeluaran')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/product\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-store\" />\n                                <p>Produk</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/items\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-cash-register\" />\n                                <p>{t('menusidebar.label.items')}</p>\n                            </NavLink>\n                        </li>\n                        <Can do=\"show\" on=\"DaftarTransaksi\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    to=\"/transaksi\"\n                                    exact\n                                    className=\"nav-link\"\n                                >\n                                    <i className=\"nav-icon fas fa-exchange-alt\" />\n                                    <p>{t('menusidebar.label.transaksi')}</p>\n                                </NavLink>\n                            </li>\n                        </Can>\n                        <Can do=\"show\" on=\"Wallet\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    to=\"/wallet\"\n                                    exact\n                                    className=\"nav-link\"\n                                >\n                                    <i className=\"nav-icon fas fa-wallet\" />\n                                    <p>{t('menusidebar.label.wallet')}</p>\n                                </NavLink>\n                            </li>\n                        </Can>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/kategori-submission\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-cog\" />\n                                <p>\n                                    {t('menusidebar.label.kategori_submission')}\n                                </p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/kategori-produk\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-cog\" />\n                                <p>{t('menusidebar.label.kategori_produk')}</p>\n                            </NavLink>\n                        </li>\n                        <Can do=\"show\" on=\"Laporan\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    to=\"/laporan\"\n                                    exact\n                                    className=\"nav-link\"\n                                >\n                                    <i className=\"nav-icon fas fa-print\" />\n                                    <p>{t('menusidebar.label.laporan')}</p>\n                                </NavLink>\n                            </li>\n                        </Can>\n                    </ul>\n                </nav>\n            </div>\n        </aside>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nexport default connect(mapStateToProps, null)(MenuSidebar);\n","import React, {useState, useEffect} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Dashboard from '@pages/Dashboard';\nimport Profile from '@app/pages/company-profile/CompanyProfile';\nimport ManageUser from '@app/pages/manage-user/ManageUser';\nimport Product from '@app/pages/product/Product';\nimport SubmissionCategory from '@app/pages/submission-categories/SubmissionCategory';\nimport ProductCategory from '@app/pages/product-category/ProductCategory';\nimport Pemasukan from '@app/pages/submission/pemasukan/index';\nimport Invoice from '@app/pages/submission/pemasukan/invoice';\nimport CreatePemasukan from '@app/pages/submission/pemasukan/create'\nimport EditPemasukan from '@app/pages/submission/pemasukan/edit'\nimport Pengeluaran from '@app/pages/submission/pengeluaran/index';\nimport CreatePengeluaran from '@app/pages/submission/pengeluaran/create'\nimport PurchaseOrder from '@app/pages/submission/pengeluaran/purchase-order'\nimport EditPengeluaran from '@app/pages/submission/pengeluaran/edit'\nimport Wallet from '@app/pages/wallets/Wallet';\nimport Items from '@app/pages/items/index'\nimport Transactions from '@app/pages/transactions/index'\nimport Laporan from '@app/pages/laporan/index'\nimport * as AuthService from '../../services/auth';\n\nimport Header from './header/Header';\nimport Footer from './footer/Footer';\nimport MenuSidebar from './menu-sidebar/MenuSidebar';\nimport * as ActionTypes from '../../store/actions';\n\nconst Main = ({onUserLoad}) => {\n    const [menusidebarState, updateMenusidebarState] = useState({\n        isMenuSidebarCollapsed: false\n    });\n\n    const toggleMenuSidebar = () => {\n        updateMenusidebarState({\n            isMenuSidebarCollapsed: !menusidebarState.isMenuSidebarCollapsed\n        });\n    };\n\n    useEffect(() => {\n        const fetchProfile = async () => {\n            try {\n                const response = await AuthService.getProfile();\n                onUserLoad({...response.data});\n            } catch (error) {\n                /* eslint no-console: \"error\" */\n                console.log(error); // eslint-disable-line no-console\n            }\n        };\n        fetchProfile();\n        return () => {}; // eslint-disable-line no-console\n    }, [onUserLoad]);\n\n    document.getElementById('root').classList.remove('register-page');\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n\n    document.getElementById('root').className += ' sidebar-mini';\n\n    if (menusidebarState.isMenuSidebarCollapsed) {\n        document.getElementById('root').classList.add('sidebar-collapse');\n        document.getElementById('root').classList.remove('sidebar-open');\n    } else {\n        document.getElementById('root').classList.add('sidebar-open');\n        document.getElementById('root').classList.remove('sidebar-collapse');\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <Header toggleMenuSidebar={toggleMenuSidebar} />\n\n            <MenuSidebar />\n\n            <div className=\"content-wrapper\">\n                <div className=\"pt-3\" />\n                <section className=\"content\">\n                    <Switch>\n                    \n                        <Route exact path=\"/laporan\" component={Laporan} />\n                        <Route exact path=\"/wallet\" component={Wallet} />\n                        \n                        <Route\n                            exact\n                            path=\"/pemasukan\"\n                            component={Pemasukan}\n                        />\n                        <Route\n                            exact\n                            path=\"/pemasukan/create\"\n                            component={CreatePemasukan}\n                        />\n                        <Route\n                            exact\n                            path=\"/pengeluaran\"\n                            component={Pengeluaran}\n                        />\n                        <Route\n                            exact\n                            path=\"/pengeluaran/purchase-order/:id\"\n                            component={PurchaseOrder}\n                        />\n                        \n                        <Route\n                            exact\n                            path=\"/pengeluaran/create\"\n                            component={CreatePengeluaran}\n                        />\n                        <Route\n                            exact\n                            path=\"/kategori-produk\"\n                            component={ProductCategory}\n                        />\n                        <Route\n                            exact\n                            path=\"/kategori-submission\"\n                            component={SubmissionCategory}\n                        />\n                        <Route\n                            exact\n                            path=\"/manage-user\"\n                            component={ManageUser}\n                        />\n                        <Route exact path=\"/product\" component={Product} />\n                        <Route\n                            exact\n                            path=\"/company-profile\"\n                            component={Profile}\n                        />\n                        <Route\n                            exact\n                            path=\"/items\"\n                            component={Items}\n                        />\n                        <Route\n                            exact\n                            path=\"/pemasukan/invoice/:id\"\n                            component={Invoice}\n                        />\n                        <Route\n                            exact\n                            path=\"/pemasukan/edit/:id\"\n                            component={EditPemasukan}\n                        />\n                        <Route\n                            exact\n                            path=\"/pengeluaran/edit/:id\"\n                            component={EditPengeluaran}\n                        />\n                        <Route\n                            exact\n                            path=\"/transaksi\"\n                            component={Transactions}\n                        />\n                        \n                        <Route exact path=\"/\" component={Dashboard} />\n                    </Switch>\n                </section>\n            </div>\n            <Footer />\n            <div\n                id=\"sidebar-overlay\"\n                role=\"presentation\"\n                onClick={toggleMenuSidebar}\n                onKeyDown={() => {}}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLoad: (user) =>\n        dispatch({type: ActionTypes.LOAD_USER, currentUser: user})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst icons = {\n    facebook: 'fab fa-facebook',\n    google: 'fab fa-google',\n    googlePlus: 'fab fa-google-plus'\n};\n\nconst AppButton = ({\n    children,\n    isLoading,\n    icon,\n    theme = 'primary',\n    disabled,\n    ...otherProps\n}) => {\n    let spinnerTemplate;\n    let iconTemplate;\n\n    if (isLoading) {\n        spinnerTemplate = (\n            <Spinner\n                className=\"ml-2\"\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />\n        );\n    }\n\n    if (icon && icons[icon]) {\n        iconTemplate = <i className={`${icons[icon]} mr-2`} />;\n    }\n\n    return (\n        // eslint-disable-next-line react/button-has-type\n        <Button\n            {...otherProps}\n            variant={theme}\n            disabled={isLoading || disabled}\n        >\n            {iconTemplate}\n            {children}\n            {spinnerTemplate}\n        </Button>\n    );\n};\n\nexport default AppButton;\n","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {toast} from 'react-toastify';\nimport {connect} from 'react-redux';\nimport {useFormik} from 'formik';\nimport {useTranslation} from 'react-i18next';\n\nimport * as AuthService from '../../services/auth';\nimport Button from '../../components/button/Button';\nimport * as ActionTypes from '../../store/actions';\nimport LoadingSpinner from '../../components/loading-spinner/LoadingSpinner'\n\n\n\nconst Login = ({onUserLogin}) => {\n    const [isAuthLoading, setAuthLoading] = useState(false);\n\n\n    const history = useHistory();\n    const [t] = useTranslation();\n    const [loading, setLoading] = React.useState(false);\n\n    const login = (email, password) => {\n        setLoading(!loading);\n        setAuthLoading(true);\n        setTimeout(() => {\n            AuthService.loginByAuth(email, password)\n                .then((token) => {\n                    toast.success('Login is succeed!');\n                    setAuthLoading(false);\n                    setLoading(false);\n                    onUserLogin(token.data);\n                    history.go('/');\n                })\n                .catch((error) => {\n                    setLoading(false);\n                    setAuthLoading(false);\n                    toast.error(\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                            'Failed'\n                    );\n                });\n        }, 1000);\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        onSubmit: (values) => {\n            login(values.email, values.password);\n        }\n    });\n\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <LoadingSpinner \n                isLoading={loading}\n            />\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center\">\n                    <Link to=\"/\" className=\"h1\">\n                        <b>Form</b>\n                        <span>Login</span>\n                    </Link>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"login-box-msg\">{t('login.label.signIn')}</p>\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email Or Username\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-user\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.email && formik.errors.email ? (\n                                <div>{formik.errors.email}</div>\n                            ) : null}\n                        </div>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.password &&\n                            formik.errors.password ? (\n                                <div>{formik.errors.password}</div>\n                            ) : null}\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <Button\n                                    block\n                                    type=\"submit\"\n                                    isLoading={isAuthLoading}\n                                >\n                                    {t('login.button.signIn.label')}\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogin: (token) => dispatch({type: ActionTypes.LOGIN_USER, token})\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PublicRoute = ({children, isLoggedIn, ...rest}) => {\n    const isAuthenticated = isLoggedIn || localStorage.getItem('token');\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isAuthenticated ? (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: location}\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PrivateRoute = ({children, isLoggedIn, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isLoggedIn ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport Main from '@modules/main/Main';\nimport Login from '@modules/login/Login';\n\nimport PublicRoute from './routes/PublicRoute';\nimport PrivateRoute from './routes/PrivateRoute';\n\nimport './App.scss';\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <PublicRoute exact path=\"/login\">\n                    <Login />\n                </PublicRoute>\n                <PrivateRoute path=\"/\">\n                    <Main />\n                </PrivateRoute>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\n\nimport translationEN from './locales/en/translation.json';\nimport translationTR from './locales/tr/translation.json';\nimport translationDE from './locales/de/translation.json';\nimport translationES from './locales/es/translation.json';\nimport translationFR from './locales/fr/translation.json';\n\n// the translations\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    tr: {\n        translation: translationTR\n    },\n    es: {\n        translation: translationES\n    },\n    fr: {\n        translation: translationFR\n    },\n    de: {\n        translation: translationDE\n    }\n};\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        },\n        react: {\n            wait: true\n        }\n    });\n\nexport default i18n;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport App from '@app/App';\nimport store from '@store';\nimport \"nprogress/nprogress.css\"\n\nimport './index.scss';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\ntoast.configure({\n    autoClose: 3000,\n    draggable: false,\n    position: 'top-right',\n    hideProgressBar: false,\n    newestOnTop: true,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    pauseOnHover: true\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const replace = require(\"lodash/replace\");\n\nconst formatCurrency = (num, c = 2, d = \",\", t = \".\") => {\n  c = isNaN((c = Math.abs(c))) ? 2 : c;\n  d = d === undefined ? \".\" : d;\n  t = t === undefined ? \",\" : t;\n  var n = num,\n    s = n < 0 ? \"-\" : \"\",\n    i = String(parseInt((n = Math.abs(Number(n) || 0).toFixed(c)))),\n    j = (j = i.length) > 3 ? j % 3 : 0;\n  return (\n    s +\n    (j ? i.substr(0, j) + t : \"\") +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) +\n    (c\n      ? d +\n        Math.abs(n - i)\n          .toFixed(c)\n          .slice(2)\n      : \"\")\n  );\n};\nexports.formatCurrency = formatCurrency;"],"sourceRoot":""}